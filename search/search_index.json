{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"mime-enum","text":"<p>A type-safe Python library for working with MIME types and file extensions.</p> <p>The <code>mime-enum</code> package provides a comprehensive enumeration of MIME types with their associated file extensions. It offers a clean, type-safe API for parsing MIME type strings, looking up MIME types by file extension, and working with file paths.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install using pip:</p> <pre><code>pip install mime-enum\n</code></pre> <p>Or using uv:</p> <pre><code>uv add mime-enum\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>The <code>mime-enum</code> library provides three key capabilities: type-safe MIME type access, flexible string parsing, and file extension lookups.</p>"},{"location":"#type-safe-mime-types","title":"Type-Safe MIME Types","text":"<p>Access MIME types as strongly-typed enum values with full IDE support:</p> <pre><code>from mime_enum import MimeType\n\n# Enum values work as strings with autocompletion and type checking\njson_mime = MimeType.APPLICATION_JSON\nprint(json_mime)  # \"application/json\"\nprint(json_mime.extensions)  # (\"json\",)\n\n</code></pre>"},{"location":"#convenient-aliases","title":"Convenient Aliases","text":"<p>For commonly used MIME types with verbose names, convenient aliases are provided:</p> <pre><code># Microsoft Office formats - use short aliases instead of verbose names\ndocx = MimeType.APPLICATION_DOCX  # vs APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\nxlsx = MimeType.APPLICATION_XLSX  # vs APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET\npptx = MimeType.APPLICATION_PPTX  # vs APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION\n\n# String representation shows the full MIME type\nprint(docx)  # \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\nprint(xlsx)  # \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\nprint(pptx)  # \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n\n# All aliases point to the same enum instances\nassert MimeType.APPLICATION_DOCX is MimeType.APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\n\n# Available aliases: DOCX, XLSX, PPTX, DOTX, XLTX, POTX, PPSX, SLDX\n</code></pre>"},{"location":"#flexible-string-parsing","title":"Flexible String Parsing","text":"<p>Parse real-world MIME type strings with automatic parameter stripping and alias normalization:</p> <pre><code>from mime_enum import parse, try_parse\n\n# Strips parameters automatically\nmime_type = parse(\"application/json; charset=utf-8\")\nprint(mime_type)  # MimeType.APPLICATION_JSON\n\n# Normalizes common aliases to canonical forms\ncanonical = parse(\"text/json\")  # \u2192 MimeType.APPLICATION_JSON\ncanonical = parse(\"application/javascript\")  # \u2192 MimeType.TEXT_JAVASCRIPT\n\n# Safe parsing returns None instead of raising exceptions\nunknown = try_parse(\"application/unknown\")\nprint(unknown)  # None\n</code></pre>"},{"location":"#file-extension-lookups","title":"File Extension Lookups","text":"<p>Detect MIME types from file extensions and paths:</p> <pre><code>from mime_enum import from_extension, from_path\n\n# Look up by extension (with or without dot, case-insensitive)\npdf_mime = from_extension(\".pdf\")  # MimeType.APPLICATION_PDF\njson_mime = from_extension(\"JSON\")  # MimeType.APPLICATION_JSON\n\n# Detect from complete file paths\nmime_type = from_path(\"/path/to/document.pdf\")  # MimeType.APPLICATION_PDF\n</code></pre> <p>Note: These functions only examine file extensions, not actual file content. For content-based detection, consider <code>python-magic</code> or <code>filetype</code> packages.</p> <p>For detailed usage examples, see the Usage Guide.</p> <p>For complete API documentation, see the API Reference.</p>"},{"location":"#acknowledgments","title":"Acknowledgments","text":"<p>This project uses the <code>mimeData.json</code> file from mimetype-io by Patrick McCallum.</p>"},{"location":"api/","title":"API Reference","text":"<p>This page contains the complete API documentation for the <code>mime-enum</code> package, automatically generated from the source code docstrings.</p>"},{"location":"api/#core-functions","title":"Core Functions","text":"<p>Parse a MIME type string to a MimeType enum.</p> <p>Performs strict parsing with the following behavior:</p> <ul> <li>Strips parameters (e.g., 'application/json; charset=utf-8' becomes 'application/json')</li> <li>Normalizes known aliases to their canonical form</li> <li>Case-insensitive matching</li> <li>Raises ValueError for unknown MIME types</li> </ul> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The MIME type string to parse (e.g., 'application/json')</p> required <p>Returns:</p> Type Description <code>MimeType</code> <p>The corresponding MimeType enum value</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the MIME type is empty, malformed, or unknown</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; parse('application/json')\nMimeType.APPLICATION_JSON\n&gt;&gt;&gt; parse('application/json; charset=utf-8')\nMimeType.APPLICATION_JSON\n&gt;&gt;&gt; parse('text/json')  # alias normalization\nMimeType.APPLICATION_JSON\n</code></pre> Source code in <code>src/mime_enum/core.py</code> <pre><code>def parse(value: str) -&gt; MimeType:\n    \"\"\"Parse a MIME type string to a MimeType enum.\n\n    Performs strict parsing with the following behavior:\n\n    - Strips parameters (e.g., 'application/json; charset=utf-8' becomes 'application/json')\n    - Normalizes known aliases to their canonical form\n    - Case-insensitive matching\n    - Raises ValueError for unknown MIME types\n\n    Args:\n        value: The MIME type string to parse (e.g., 'application/json')\n\n    Returns:\n        The corresponding MimeType enum value\n\n    Raises:\n        ValueError: If the MIME type is empty, malformed, or unknown\n\n    Examples:\n        &gt;&gt;&gt; parse('application/json')\n        MimeType.APPLICATION_JSON\n        &gt;&gt;&gt; parse('application/json; charset=utf-8')\n        MimeType.APPLICATION_JSON\n        &gt;&gt;&gt; parse('text/json')  # alias normalization\n        MimeType.APPLICATION_JSON\n    \"\"\"\n    if not value:\n        raise ValueError(\"Empty MIME string\")  # noqa: TRY003\n    core = _strip_params(value)\n    if core in _ALIASES:\n        return _ALIASES[core]\n    try:\n        return MimeType(core)\n    except ValueError as exc:\n        raise ValueError(f\"Unknown MIME type: {value!r}\") from exc  # noqa: TRY003\n</code></pre> <p>Parse a MIME type string, returning None for unknown types.</p> <p>Similar to parse() but returns None instead of raising ValueError for unknown or empty MIME type strings.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>The MIME type string to parse (e.g., 'application/json')</p> required <p>Returns:</p> Type Description <code>MimeType | None</code> <p>The corresponding MimeType enum value, or None if unknown/empty</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; try_parse('application/json')\nMimeType.APPLICATION_JSON\n&gt;&gt;&gt; try_parse('unknown/type')\nNone\n&gt;&gt;&gt; try_parse('')\nNone\n</code></pre> Source code in <code>src/mime_enum/core.py</code> <pre><code>def try_parse(value: str) -&gt; MimeType | None:\n    \"\"\"Parse a MIME type string, returning None for unknown types.\n\n    Similar to parse() but returns None instead of raising ValueError\n    for unknown or empty MIME type strings.\n\n    Args:\n        value: The MIME type string to parse (e.g., 'application/json')\n\n    Returns:\n        The corresponding MimeType enum value, or None if unknown/empty\n\n    Examples:\n        &gt;&gt;&gt; try_parse('application/json')\n        MimeType.APPLICATION_JSON\n        &gt;&gt;&gt; try_parse('unknown/type')\n        None\n        &gt;&gt;&gt; try_parse('')\n        None\n    \"\"\"\n    if not value:\n        return None\n    core = _strip_params(value)\n    if core in _ALIASES:\n        return _ALIASES[core]\n    try:\n        return MimeType(core)\n    except ValueError:\n        return None\n</code></pre> <p>Get MIME type from a file extension.</p> <p>Performs case-insensitive lookup of MIME types by file extension. Handles extensions with or without leading dot.</p> <p>Parameters:</p> Name Type Description Default <code>ext</code> <code>str</code> <p>File extension (e.g., 'json', '.json', 'PDF', '.PDF')</p> required <p>Returns:</p> Type Description <code>MimeType | None</code> <p>The corresponding MimeType enum value, or None if extension is unknown</p> Note <p>This function only looks at the file extension and does NOT examine actual file content. Files can have incorrect or missing extensions, making this method unreliable for security-critical applications.</p> <p>For content-based MIME type detection, consider using packages like:</p> <ul> <li><code>python-magic</code> (libmagic wrapper)</li> <li><code>filetype</code> (pure Python file type detection)</li> </ul> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from_extension('json')\nMimeType.APPLICATION_JSON\n&gt;&gt;&gt; from_extension('.pdf')\nMimeType.APPLICATION_PDF\n&gt;&gt;&gt; from_extension('unknown')\nNone\n</code></pre> Source code in <code>src/mime_enum/core.py</code> <pre><code>def from_extension(ext: str) -&gt; MimeType | None:\n    \"\"\"Get MIME type from a file extension.\n\n    Performs case-insensitive lookup of MIME types by file extension.\n    Handles extensions with or without leading dot.\n\n    Args:\n        ext: File extension (e.g., 'json', '.json', 'PDF', '.PDF')\n\n    Returns:\n        The corresponding MimeType enum value, or None if extension is unknown\n\n    Note:\n        This function only looks at the file extension and does NOT examine\n        actual file content. Files can have incorrect or missing extensions,\n        making this method unreliable for security-critical applications.\n\n        For content-based MIME type detection, consider using packages like:\n\n        - `python-magic` (libmagic wrapper)\n        - `filetype` (pure Python file type detection)\n\n    Examples:\n        &gt;&gt;&gt; from_extension('json')\n        MimeType.APPLICATION_JSON\n        &gt;&gt;&gt; from_extension('.pdf')\n        MimeType.APPLICATION_PDF\n        &gt;&gt;&gt; from_extension('unknown')\n        None\n    \"\"\"\n    if not ext:\n        return None\n\n    token = ext.lstrip(\".\").lower()\n    return _EXT_TO_MIME.get(token)\n</code></pre> <p>Get MIME type from a file path or filename.</p> <p>Extracts the file extension from the path and looks up the corresponding MIME type. Uses the last extension for compound extensions (e.g., 'file.tar.gz' uses '.gz').</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str | Path</code> <p>File path or filename (str or Path object)</p> required <p>Returns:</p> Type Description <code>MimeType | None</code> <p>The corresponding MimeType enum value, or None if no extension</p> <code>MimeType | None</code> <p>or unknown extension</p> Warning <p>This function is purely extension-based and does NOT read or examine the actual file content. This can be unreliable because:</p> <ul> <li>Files may have incorrect extensions (e.g., .txt file containing JSON)</li> <li>Files may be renamed with wrong extensions</li> <li>Files without extensions will return None</li> <li>Malicious files can masquerade with fake extensions</li> </ul> <p>For accurate MIME type detection based on file signatures/magic bytes, use content-based detection libraries like <code>python-magic</code> or <code>filetype</code>.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; from_path('/tmp/document.pdf')\nMimeType.APPLICATION_PDF\n&gt;&gt;&gt; from_path('data.json')\nMimeType.APPLICATION_JSON\n&gt;&gt;&gt; from_path('file_without_extension')\nNone\n</code></pre> Source code in <code>src/mime_enum/core.py</code> <pre><code>def from_path(path: str | Path) -&gt; MimeType | None:\n    \"\"\"Get MIME type from a file path or filename.\n\n    Extracts the file extension from the path and looks up the\n    corresponding MIME type. Uses the last extension for compound\n    extensions (e.g., 'file.tar.gz' uses '.gz').\n\n    Args:\n        path: File path or filename (str or Path object)\n\n    Returns:\n        The corresponding MimeType enum value, or None if no extension\n        or unknown extension\n\n    Warning:\n        This function is purely extension-based and does NOT read or examine\n        the actual file content. This can be unreliable because:\n\n        - Files may have incorrect extensions (e.g., .txt file containing JSON)\n        - Files may be renamed with wrong extensions\n        - Files without extensions will return None\n        - Malicious files can masquerade with fake extensions\n\n        For accurate MIME type detection based on file signatures/magic bytes,\n        use content-based detection libraries like `python-magic` or `filetype`.\n\n    Examples:\n        &gt;&gt;&gt; from_path('/tmp/document.pdf')\n        MimeType.APPLICATION_PDF\n        &gt;&gt;&gt; from_path('data.json')\n        MimeType.APPLICATION_JSON\n        &gt;&gt;&gt; from_path('file_without_extension')\n        None\n    \"\"\"\n    if not path:\n        return None\n\n    p = Path(path)\n    if not p.suffix:\n        return None\n\n    return from_extension(p.suffix)\n</code></pre>"},{"location":"api/#mimetype-enum","title":"MimeType Enum","text":"<p>               Bases: <code>StrEnum</code></p> <p>MIME type enumeration with associated file extensions.</p> <p>Auto-generated enum containing standard MIME types as string values. Each enum member has an associated <code>.extensions</code> attribute containing a tuple of common file extensions for that MIME type.</p> <p>The enum values are the official MIME type strings (e.g., 'application/json'), and can be used directly as strings in HTTP headers, content-type detection, and other applications.</p> <p>Attributes:</p> Name Type Description <code>extensions</code> <p>Tuple of file extensions associated with this MIME type</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; MimeType.APPLICATION_JSON\n'application/json'\n&gt;&gt;&gt; MimeType.APPLICATION_JSON.extensions\n('json',)\n&gt;&gt;&gt; str(MimeType.TEXT_HTML)\n'text/html'\n</code></pre> Source code in <code>src/mime_enum/mimetype.py</code> <pre><code>class MimeType(StrEnum):\n    \"\"\"MIME type enumeration with associated file extensions.\n\n    Auto-generated enum containing standard MIME types as string values.\n    Each enum member has an associated `.extensions` attribute containing\n    a tuple of common file extensions for that MIME type.\n\n    The enum values are the official MIME type strings (e.g., 'application/json'),\n    and can be used directly as strings in HTTP headers, content-type detection,\n    and other applications.\n\n    Attributes:\n        extensions: Tuple of file extensions associated with this MIME type\n\n    Examples:\n        &gt;&gt;&gt; MimeType.APPLICATION_JSON\n        'application/json'\n        &gt;&gt;&gt; MimeType.APPLICATION_JSON.extensions\n        ('json',)\n        &gt;&gt;&gt; str(MimeType.TEXT_HTML)\n        'text/html'\n    \"\"\"\n\n    def __new__(cls, value: str, extensions: tuple[str, ...] = ()):  # type: ignore[override]\n        obj = str.__new__(cls, value)\n        obj._value_ = value\n        obj.extensions = extensions\n        return obj\n\n    APPLICATION_ANDREW_INSET = (\"application/andrew-inset\", (\"ez\",))\n    APPLICATION_APPLIXWARE = (\"application/applixware\", (\"aw\",))\n    APPLICATION_ATOM_XML = (\"application/atom+xml\", (\"atom\",))\n    APPLICATION_ATOMCAT_XML = (\"application/atomcat+xml\", (\"atomcat\",))\n    APPLICATION_ATOMSVC_XML = (\"application/atomsvc+xml\", (\"atomsvc\",))\n    APPLICATION_CCXML_XML = (\"application/ccxml+xml\", (\"ccxml\",))\n    APPLICATION_CU_SEEME = (\"application/cu-seeme\", (\"cu\",))\n    APPLICATION_DAVMOUNT_XML = (\"application/davmount+xml\", (\"davmount\",))\n    APPLICATION_ECMASCRIPT = (\"application/ecmascript\", (\"ecma\",))\n    APPLICATION_EMMA_XML = (\"application/emma+xml\", (\"emma\",))\n    APPLICATION_EPUB_ZIP = (\"application/epub+zip\", (\"epub\",))\n    APPLICATION_FONT_TDPFR = (\"application/font-tdpfr\", (\"pfr\",))\n    APPLICATION_GZIP = (\"application/gzip\", (\"gz\", \"tgz\"))\n    APPLICATION_HYPERSTUDIO = (\"application/hyperstudio\", (\"stk\",))\n    APPLICATION_JAVA_ARCHIVE = (\"application/java-archive\", (\"jar\",))\n    APPLICATION_JAVA_SERIALIZED_OBJECT = (\"application/java-serialized-object\", (\"ser\",))\n    APPLICATION_JAVA_VM = (\"application/java-vm\", (\"class\",))\n    APPLICATION_JSON = (\"application/json\", (\"json\",))\n    APPLICATION_LOST_XML = (\"application/lost+xml\", (\"lostxml\",))\n    APPLICATION_MAC_BINHEX40 = (\"application/mac-binhex40\", (\"hqx\",))\n    APPLICATION_MAC_COMPACTPRO = (\"application/mac-compactpro\", (\"cpt\",))\n    APPLICATION_MARC = (\"application/marc\", (\"mrc\",))\n    APPLICATION_MATHEMATICA = (\"application/mathematica\", (\"ma\", \"mb\", \"nb\"))\n    APPLICATION_MATHML_XML = (\"application/mathml+xml\", (\"mathml\", \"mml\"))\n    APPLICATION_MBOX = (\"application/mbox\", (\"mbox\",))\n    APPLICATION_MEDIASERVERCONTROL_XML = (\"application/mediaservercontrol+xml\", (\"mscml\",))\n    APPLICATION_MP4 = (\"application/mp4\", (\"mp4s\",))\n    APPLICATION_MSWORD = (\"application/msword\", (\"doc\", \"dot\", \"wiz\"))\n    APPLICATION_MXF = (\"application/mxf\", (\"mxf\",))\n    APPLICATION_OCTET_STREAM = (\n        \"application/octet-stream\",\n        (\n            \"a\",\n            \"bin\",\n            \"bpk\",\n            \"deploy\",\n            \"dist\",\n            \"distz\",\n            \"dmg\",\n            \"dms\",\n            \"dump\",\n            \"elc\",\n            \"lha\",\n            \"lrf\",\n            \"lzh\",\n            \"o\",\n            \"obj\",\n            \"pkg\",\n            \"so\",\n        ),\n    )\n    APPLICATION_ODA = (\"application/oda\", (\"oda\",))\n    APPLICATION_OEBPS_PACKAGE_XML = (\"application/oebps-package+xml\", (\"opf\",))\n    APPLICATION_OGG = (\"application/ogg\", (\"ogx\",))\n    APPLICATION_ONENOTE = (\"application/onenote\", (\"onepkg\", \"onetmp\", \"onetoc\", \"onetoc2\"))\n    APPLICATION_PATCH_OPS_ERROR_XML = (\"application/patch-ops-error+xml\", (\"xer\",))\n    APPLICATION_PDF = (\"application/pdf\", (\"pdf\",))\n    APPLICATION_PGP_ENCRYPTED = (\"application/pgp-encrypted\", (\"pgp\",))\n    APPLICATION_PGP_SIGNATURE = (\"application/pgp-signature\", (\"asc\", \"sig\"))\n    APPLICATION_PICS_RULES = (\"application/pics-rules\", (\"prf\",))\n    APPLICATION_PKCS10 = (\"application/pkcs10\", (\"p10\",))\n    APPLICATION_PKCS7_MIME = (\"application/pkcs7-mime\", (\"p7c\", \"p7m\"))\n    APPLICATION_PKCS7_SIGNATURE = (\"application/pkcs7-signature\", (\"p7s\",))\n    APPLICATION_PKIX_CERT = (\"application/pkix-cert\", (\"cer\",))\n    APPLICATION_PKIX_CRL = (\"application/pkix-crl\", (\"crl\",))\n    APPLICATION_PKIX_PKIPATH = (\"application/pkix-pkipath\", (\"pkipath\",))\n    APPLICATION_PKIXCMP = (\"application/pkixcmp\", (\"pki\",))\n    APPLICATION_PLS_XML = (\"application/pls+xml\", (\"pls\",))\n    APPLICATION_POSTSCRIPT = (\"application/postscript\", (\"ai\", \"eps\", \"ps\"))\n    APPLICATION_PRQL = (\"application/prql\", (\"prql\",))\n    APPLICATION_PRS_CWW = (\"application/prs.cww\", (\"cww\",))\n    APPLICATION_RDF_XML = (\"application/rdf+xml\", (\"rdf\",))\n    APPLICATION_REGINFO_XML = (\"application/reginfo+xml\", (\"rif\",))\n    APPLICATION_RELAX_NG_COMPACT_SYNTAX = (\"application/relax-ng-compact-syntax\", (\"rnc\",))\n    APPLICATION_RESOURCE_LISTS_XML = (\"application/resource-lists+xml\", (\"rl\",))\n    APPLICATION_RESOURCE_LISTS_DIFF_XML = (\"application/resource-lists-diff+xml\", (\"rld\",))\n    APPLICATION_RLS_SERVICES_XML = (\"application/rls-services+xml\", (\"rs\",))\n    APPLICATION_RSD_XML = (\"application/rsd+xml\", (\"rsd\",))\n    APPLICATION_RSS_XML = (\"application/rss+xml\", (\"rss\", \"xml\"))\n    APPLICATION_RTF = (\"application/rtf\", (\"rtf\",))\n    APPLICATION_SBML_XML = (\"application/sbml+xml\", (\"sbml\",))\n    APPLICATION_SCVP_CV_REQUEST = (\"application/scvp-cv-request\", (\"scq\",))\n    APPLICATION_SCVP_CV_RESPONSE = (\"application/scvp-cv-response\", (\"scs\",))\n    APPLICATION_SCVP_VP_REQUEST = (\"application/scvp-vp-request\", (\"spq\",))\n    APPLICATION_SCVP_VP_RESPONSE = (\"application/scvp-vp-response\", (\"spp\",))\n    APPLICATION_SDP = (\"application/sdp\", (\"sdp\",))\n    APPLICATION_SET_PAYMENT_INITIATION = (\"application/set-payment-initiation\", (\"setpay\",))\n    APPLICATION_SET_REGISTRATION_INITIATION = (\"application/set-registration-initiation\", (\"setreg\",))\n    APPLICATION_SHF_XML = (\"application/shf+xml\", (\"shf\",))\n    APPLICATION_SMIL_XML = (\"application/smil+xml\", (\"smi\", \"smil\"))\n    APPLICATION_SPARQL_QUERY = (\"application/sparql-query\", (\"rq\",))\n    APPLICATION_SPARQL_RESULTS_XML = (\"application/sparql-results+xml\", (\"srx\",))\n    APPLICATION_SRGS = (\"application/srgs\", (\"gram\",))\n    APPLICATION_SRGS_XML = (\"application/srgs+xml\", (\"grxml\",))\n    APPLICATION_SSML_XML = (\"application/ssml+xml\", (\"ssml\",))\n    APPLICATION_VND_3GPP_PIC_BW_LARGE = (\"application/vnd.3gpp.pic-bw-large\", (\"plb\",))\n    APPLICATION_VND_3GPP_PIC_BW_SMALL = (\"application/vnd.3gpp.pic-bw-small\", (\"psb\",))\n    APPLICATION_VND_3GPP_PIC_BW_VAR = (\"application/vnd.3gpp.pic-bw-var\", (\"pvb\",))\n    APPLICATION_VND_3GPP2_TCAP = (\"application/vnd.3gpp2.tcap\", (\"tcap\",))\n    APPLICATION_VND_3M_POST_IT_NOTES = (\"application/vnd.3m.post-it-notes\", (\"pwn\",))\n    APPLICATION_VND_ACCPAC_SIMPLY_ASO = (\"application/vnd.accpac.simply.aso\", (\"aso\",))\n    APPLICATION_VND_ACCPAC_SIMPLY_IMP = (\"application/vnd.accpac.simply.imp\", (\"imp\",))\n    APPLICATION_VND_ACUCOBOL = (\"application/vnd.acucobol\", (\"acu\",))\n    APPLICATION_VND_ACUCORP = (\"application/vnd.acucorp\", (\"acutc\", \"atc\"))\n    APPLICATION_VND_ADOBE_AIR_APPLICATION_INSTALLER_PACKAGE_ZIP = (\n        \"application/vnd.adobe.air-application-installer-package+zip\",\n        (\"air\",),\n    )\n    APPLICATION_VND_ADOBE_XDP_XML = (\"application/vnd.adobe.xdp+xml\", (\"xdp\",))\n    APPLICATION_VND_ADOBE_XFDF = (\"application/vnd.adobe.xfdf\", (\"xfdf\",))\n    APPLICATION_VND_AIRZIP_FILESECURE_AZF = (\"application/vnd.airzip.filesecure.azf\", (\"azf\",))\n    APPLICATION_VND_AIRZIP_FILESECURE_AZS = (\"application/vnd.airzip.filesecure.azs\", (\"azs\",))\n    APPLICATION_VND_AMAZON_EBOOK = (\"application/vnd.amazon.ebook\", (\"azw\",))\n    APPLICATION_VND_AMERICANDYNAMICS_ACC = (\"application/vnd.americandynamics.acc\", (\"acc\",))\n    APPLICATION_VND_AMIGA_AMI = (\"application/vnd.amiga.ami\", (\"ami\",))\n    APPLICATION_VND_ANDROID_PACKAGE_ARCHIVE = (\"application/vnd.android.package-archive\", (\"apk\",))\n    APPLICATION_VND_ANSER_WEB_CERTIFICATE_ISSUE_INITIATION = (\n        \"application/vnd.anser-web-certificate-issue-initiation\",\n        (\"cii\",),\n    )\n    APPLICATION_VND_ANSER_WEB_FUNDS_TRANSFER_INITIATION = (\n        \"application/vnd.anser-web-funds-transfer-initiation\",\n        (\"fti\",),\n    )\n    APPLICATION_VND_ANTIX_GAME_COMPONENT = (\"application/vnd.antix.game-component\", (\"atx\",))\n    APPLICATION_VND_APPLE_INSTALLER_XML = (\"application/vnd.apple.installer+xml\", (\"mpkg\",))\n    APPLICATION_VND_ARASTRA_SWI = (\"application/vnd.arastra.swi\", (\"swi\",))\n    APPLICATION_VND_AUDIOGRAPH = (\"application/vnd.audiograph\", (\"aep\",))\n    APPLICATION_VND_BLUEICE_MULTIPASS = (\"application/vnd.blueice.multipass\", (\"mpm\",))\n    APPLICATION_VND_BMI = (\"application/vnd.bmi\", (\"bmi\",))\n    APPLICATION_VND_BUSINESSOBJECTS = (\"application/vnd.businessobjects\", (\"rep\",))\n    APPLICATION_VND_CHEMDRAW_XML = (\"application/vnd.chemdraw+xml\", (\"cdxml\",))\n    APPLICATION_VND_CHIPNUTS_KARAOKE_MMD = (\"application/vnd.chipnuts.karaoke-mmd\", (\"mmd\",))\n    APPLICATION_VND_CINDERELLA = (\"application/vnd.cinderella\", (\"cdy\",))\n    APPLICATION_VND_CLAYMORE = (\"application/vnd.claymore\", (\"cla\",))\n    APPLICATION_VND_CLONK_C4GROUP = (\"application/vnd.clonk.c4group\", (\"c4d\", \"c4f\", \"c4g\", \"c4p\", \"c4u\"))\n    APPLICATION_VND_COMMONSPACE = (\"application/vnd.commonspace\", (\"csp\",))\n    APPLICATION_VND_CONTACT_CMSG = (\"application/vnd.contact.cmsg\", (\"cdbcmsg\",))\n    APPLICATION_VND_COSMOCALLER = (\"application/vnd.cosmocaller\", (\"cmc\",))\n    APPLICATION_VND_CRICK_CLICKER = (\"application/vnd.crick.clicker\", (\"clkx\",))\n    APPLICATION_VND_CRICK_CLICKER_KEYBOARD = (\"application/vnd.crick.clicker.keyboard\", (\"clkk\",))\n    APPLICATION_VND_CRICK_CLICKER_PALETTE = (\"application/vnd.crick.clicker.palette\", (\"clkp\",))\n    APPLICATION_VND_CRICK_CLICKER_TEMPLATE = (\"application/vnd.crick.clicker.template\", (\"clkt\",))\n    APPLICATION_VND_CRICK_CLICKER_WORDBANK = (\"application/vnd.crick.clicker.wordbank\", (\"clkw\",))\n    APPLICATION_VND_CRITICALTOOLS_WBS_XML = (\"application/vnd.criticaltools.wbs+xml\", (\"wbs\",))\n    APPLICATION_VND_CTC_POSML = (\"application/vnd.ctc-posml\", (\"pml\",))\n    APPLICATION_VND_CUPS_PPD = (\"application/vnd.cups-ppd\", (\"ppd\",))\n    APPLICATION_VND_CURL_CAR = (\"application/vnd.curl.car\", (\"car\",))\n    APPLICATION_VND_CURL_PCURL = (\"application/vnd.curl.pcurl\", (\"pcurl\",))\n    APPLICATION_VND_DATA_VISION_RDZ = (\"application/vnd.data-vision.rdz\", (\"rdz\",))\n    APPLICATION_VND_DEBIAN_BINARY_PACKAGE = (\"application/vnd.debian.binary-package\", (\"deb\", \"udeb\"))\n    APPLICATION_VND_DENOVO_FCSELAYOUT_LINK = (\"application/vnd.denovo.fcselayout-link\", (\"fe_launch\",))\n    APPLICATION_VND_DNA = (\"application/vnd.dna\", (\"dna\",))\n    APPLICATION_VND_DOLBY_MLP = (\"application/vnd.dolby.mlp\", (\"mlp\",))\n    APPLICATION_VND_DPGRAPH = (\"application/vnd.dpgraph\", (\"dpg\",))\n    APPLICATION_VND_DREAMFACTORY = (\"application/vnd.dreamfactory\", (\"dfac\",))\n    APPLICATION_VND_DYNAGEO = (\"application/vnd.dynageo\", (\"geo\",))\n    APPLICATION_VND_ECOWIN_CHART = (\"application/vnd.ecowin.chart\", (\"mag\",))\n    APPLICATION_VND_ENLIVEN = (\"application/vnd.enliven\", (\"nml\",))\n    APPLICATION_VND_EPSON_ESF = (\"application/vnd.epson.esf\", (\"esf\",))\n    APPLICATION_VND_EPSON_MSF = (\"application/vnd.epson.msf\", (\"msf\",))\n    APPLICATION_VND_EPSON_QUICKANIME = (\"application/vnd.epson.quickanime\", (\"qam\",))\n    APPLICATION_VND_EPSON_SALT = (\"application/vnd.epson.salt\", (\"slt\",))\n    APPLICATION_VND_EPSON_SSF = (\"application/vnd.epson.ssf\", (\"ssf\",))\n    APPLICATION_VND_ESZIGNO3_XML = (\"application/vnd.eszigno3+xml\", (\"es3\", \"et3\"))\n    APPLICATION_VND_EZPIX_ALBUM = (\"application/vnd.ezpix-album\", (\"ez2\",))\n    APPLICATION_VND_EZPIX_PACKAGE = (\"application/vnd.ezpix-package\", (\"ez3\",))\n    APPLICATION_VND_FDF = (\"application/vnd.fdf\", (\"fdf\",))\n    APPLICATION_VND_FDSN_MSEED = (\"application/vnd.fdsn.mseed\", (\"mseed\",))\n    APPLICATION_VND_FDSN_SEED = (\"application/vnd.fdsn.seed\", (\"dataless\", \"seed\"))\n    APPLICATION_VND_FLOGRAPHIT = (\"application/vnd.flographit\", (\"gph\",))\n    APPLICATION_VND_FLUXTIME_CLIP = (\"application/vnd.fluxtime.clip\", (\"ftc\",))\n    APPLICATION_VND_FRAMEMAKER = (\"application/vnd.framemaker\", (\"book\", \"fm\", \"frame\", \"maker\"))\n    APPLICATION_VND_FROGANS_FNC = (\"application/vnd.frogans.fnc\", (\"fnc\",))\n    APPLICATION_VND_FROGANS_LTF = (\"application/vnd.frogans.ltf\", (\"ltf\",))\n    APPLICATION_VND_FSC_WEBLAUNCH = (\"application/vnd.fsc.weblaunch\", (\"fsc\",))\n    APPLICATION_VND_FUJITSU_OASYS = (\"application/vnd.fujitsu.oasys\", (\"oas\",))\n    APPLICATION_VND_FUJITSU_OASYS2 = (\"application/vnd.fujitsu.oasys2\", (\"oa2\",))\n    APPLICATION_VND_FUJITSU_OASYS3 = (\"application/vnd.fujitsu.oasys3\", (\"oa3\",))\n    APPLICATION_VND_FUJITSU_OASYSGP = (\"application/vnd.fujitsu.oasysgp\", (\"fg5\",))\n    APPLICATION_VND_FUJITSU_OASYSPRS = (\"application/vnd.fujitsu.oasysprs\", (\"bh2\",))\n    APPLICATION_VND_FUJIXEROX_DDD = (\"application/vnd.fujixerox.ddd\", (\"ddd\",))\n    APPLICATION_VND_FUJIXEROX_DOCUWORKS = (\"application/vnd.fujixerox.docuworks\", (\"xdw\",))\n    APPLICATION_VND_FUJIXEROX_DOCUWORKS_BINDER = (\"application/vnd.fujixerox.docuworks.binder\", (\"xbd\",))\n    APPLICATION_VND_FUZZYSHEET = (\"application/vnd.fuzzysheet\", (\"fzs\",))\n    APPLICATION_VND_GENOMATIX_TUXEDO = (\"application/vnd.genomatix.tuxedo\", (\"txd\",))\n    APPLICATION_VND_GEOGEBRA_FILE = (\"application/vnd.geogebra.file\", (\"ggb\",))\n    APPLICATION_VND_GEOGEBRA_TOOL = (\"application/vnd.geogebra.tool\", (\"ggt\",))\n    APPLICATION_VND_GEOMETRY_EXPLORER = (\"application/vnd.geometry-explorer\", (\"gex\", \"gre\"))\n    APPLICATION_VND_GERBER = (\"application/vnd.gerber\", (\"gbr\",))\n    APPLICATION_VND_GMX = (\"application/vnd.gmx\", (\"gmx\",))\n    APPLICATION_VND_GOOGLE_EARTH_KML_XML = (\"application/vnd.google-earth.kml+xml\", (\"kml\",))\n    APPLICATION_VND_GOOGLE_EARTH_KMZ = (\"application/vnd.google-earth.kmz\", (\"kmz\",))\n    APPLICATION_VND_GRAFEQ = (\"application/vnd.grafeq\", (\"gqf\", \"gqs\"))\n    APPLICATION_VND_GROOVE_ACCOUNT = (\"application/vnd.groove-account\", (\"gac\",))\n    APPLICATION_VND_GROOVE_HELP = (\"application/vnd.groove-help\", (\"ghf\",))\n    APPLICATION_VND_GROOVE_IDENTITY_MESSAGE = (\"application/vnd.groove-identity-message\", (\"gim\",))\n    APPLICATION_VND_GROOVE_INJECTOR = (\"application/vnd.groove-injector\", (\"grv\",))\n    APPLICATION_VND_GROOVE_TOOL_MESSAGE = (\"application/vnd.groove-tool-message\", (\"gtm\",))\n    APPLICATION_VND_GROOVE_TOOL_TEMPLATE = (\"application/vnd.groove-tool-template\", (\"tpl\",))\n    APPLICATION_VND_GROOVE_VCARD = (\"application/vnd.groove-vcard\", (\"vcg\",))\n    APPLICATION_VND_HANDHELD_ENTERTAINMENT_XML = (\"application/vnd.handheld-entertainment+xml\", (\"zmm\",))\n    APPLICATION_VND_HBCI = (\"application/vnd.hbci\", (\"hbci\",))\n    APPLICATION_VND_HHE_LESSON_PLAYER = (\"application/vnd.hhe.lesson-player\", (\"les\",))\n    APPLICATION_VND_HP_HPGL = (\"application/vnd.hp-hpgl\", (\"hpgl\",))\n    APPLICATION_VND_HP_HPID = (\"application/vnd.hp-hpid\", (\"hpid\",))\n    APPLICATION_VND_HP_HPS = (\"application/vnd.hp-hps\", (\"hps\",))\n    APPLICATION_VND_HP_JLYT = (\"application/vnd.hp-jlyt\", (\"jlt\",))\n    APPLICATION_VND_HP_PCL = (\"application/vnd.hp-pcl\", (\"pcl\",))\n    APPLICATION_VND_HP_PCLXL = (\"application/vnd.hp-pclxl\", (\"pclxl\",))\n    APPLICATION_VND_HYDROSTATIX_SOF_DATA = (\"application/vnd.hydrostatix.sof-data\", (\"sfd-hdstx\",))\n    APPLICATION_VND_HZN_3D_CROSSWORD = (\"application/vnd.hzn-3d-crossword\", (\"x3d\",))\n    APPLICATION_VND_IBM_MINIPAY = (\"application/vnd.ibm.minipay\", (\"mpy\",))\n    APPLICATION_VND_IBM_MODCAP = (\"application/vnd.ibm.modcap\", (\"afp\", \"list3820\", \"listafp\"))\n    APPLICATION_VND_IBM_RIGHTS_MANAGEMENT = (\"application/vnd.ibm.rights-management\", (\"irm\",))\n    APPLICATION_VND_IBM_SECURE_CONTAINER = (\"application/vnd.ibm.secure-container\", (\"sc\",))\n    APPLICATION_VND_ICCPROFILE = (\"application/vnd.iccprofile\", (\"icc\", \"icm\"))\n    APPLICATION_VND_IGLOADER = (\"application/vnd.igloader\", (\"igl\",))\n    APPLICATION_VND_IMMERVISION_IVP = (\"application/vnd.immervision-ivp\", (\"ivp\",))\n    APPLICATION_VND_IMMERVISION_IVU = (\"application/vnd.immervision-ivu\", (\"ivu\",))\n    APPLICATION_VND_INTERCON_FORMNET = (\"application/vnd.intercon.formnet\", (\"xpw\", \"xpx\"))\n    APPLICATION_VND_INTU_QBO = (\"application/vnd.intu.qbo\", (\"qbo\",))\n    APPLICATION_VND_INTU_QFX = (\"application/vnd.intu.qfx\", (\"qfx\",))\n    APPLICATION_VND_IPUNPLUGGED_RCPROFILE = (\"application/vnd.ipunplugged.rcprofile\", (\"rcprofile\",))\n    APPLICATION_VND_IREPOSITORY_PACKAGE_XML = (\"application/vnd.irepository.package+xml\", (\"irp\",))\n    APPLICATION_VND_IS_XPR = (\"application/vnd.is-xpr\", (\"xpr\",))\n    APPLICATION_VND_JAM = (\"application/vnd.jam\", (\"jam\",))\n    APPLICATION_VND_JCP_JAVAME_MIDLET_RMS = (\"application/vnd.jcp.javame.midlet-rms\", (\"rms\",))\n    APPLICATION_VND_JISP = (\"application/vnd.jisp\", (\"jisp\",))\n    APPLICATION_VND_JOOST_JODA_ARCHIVE = (\"application/vnd.joost.joda-archive\", (\"joda\",))\n    APPLICATION_VND_KAHOOTZ = (\"application/vnd.kahootz\", (\"ktr\", \"ktz\"))\n    APPLICATION_VND_KDE_KARBON = (\"application/vnd.kde.karbon\", (\"karbon\",))\n    APPLICATION_VND_KDE_KCHART = (\"application/vnd.kde.kchart\", (\"chrt\",))\n    APPLICATION_VND_KDE_KFORMULA = (\"application/vnd.kde.kformula\", (\"kfo\",))\n    APPLICATION_VND_KDE_KIVIO = (\"application/vnd.kde.kivio\", (\"flw\",))\n    APPLICATION_VND_KDE_KONTOUR = (\"application/vnd.kde.kontour\", (\"kon\",))\n    APPLICATION_VND_KDE_KPRESENTER = (\"application/vnd.kde.kpresenter\", (\"kpr\", \"kpt\"))\n    APPLICATION_VND_KDE_KSPREAD = (\"application/vnd.kde.kspread\", (\"ksp\",))\n    APPLICATION_VND_KDE_KWORD = (\"application/vnd.kde.kword\", (\"kwd\", \"kwt\"))\n    APPLICATION_VND_KENAMEAAPP = (\"application/vnd.kenameaapp\", (\"htke\",))\n    APPLICATION_VND_KIDSPIRATION = (\"application/vnd.kidspiration\", (\"kia\",))\n    APPLICATION_VND_KINAR = (\"application/vnd.kinar\", (\"kne\", \"knp\"))\n    APPLICATION_VND_KOAN = (\"application/vnd.koan\", (\"skd\", \"skm\", \"skp\", \"skt\"))\n    APPLICATION_VND_KODAK_DESCRIPTOR = (\"application/vnd.kodak-descriptor\", (\"sse\",))\n    APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP = (\n        \"application/vnd.llamagraphics.life-balance.desktop\",\n        (\"lbd\",),\n    )\n    APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML = (\n        \"application/vnd.llamagraphics.life-balance.exchange+xml\",\n        (\"lbe\",),\n    )\n    APPLICATION_VND_LOTUS_1_2_3 = (\"application/vnd.lotus-1-2-3\", (\"123\",))\n    APPLICATION_VND_LOTUS_APPROACH = (\"application/vnd.lotus-approach\", (\"apr\",))\n    APPLICATION_VND_LOTUS_FREELANCE = (\"application/vnd.lotus-freelance\", (\"pre\",))\n    APPLICATION_VND_LOTUS_NOTES = (\"application/vnd.lotus-notes\", (\"nsf\",))\n    APPLICATION_VND_LOTUS_ORGANIZER = (\"application/vnd.lotus-organizer\", (\"org\",))\n    APPLICATION_VND_LOTUS_SCREENCAM = (\"application/vnd.lotus-screencam\", (\"scm\",))\n    APPLICATION_VND_LOTUS_WORDPRO = (\"application/vnd.lotus-wordpro\", (\"lwp\",))\n    APPLICATION_VND_MACPORTS_PORTPKG = (\"application/vnd.macports.portpkg\", (\"portpkg\",))\n    APPLICATION_VND_MCD = (\"application/vnd.mcd\", (\"mcd\",))\n    APPLICATION_VND_MEDCALCDATA = (\"application/vnd.medcalcdata\", (\"mc1\",))\n    APPLICATION_VND_MEDIASTATION_CDKEY = (\"application/vnd.mediastation.cdkey\", (\"cdkey\",))\n    APPLICATION_VND_MFER = (\"application/vnd.mfer\", (\"mwf\",))\n    APPLICATION_VND_MFMP = (\"application/vnd.mfmp\", (\"mfm\",))\n    APPLICATION_VND_MICROGRAFX_FLO = (\"application/vnd.micrografx.flo\", (\"flo\",))\n    APPLICATION_VND_MICROGRAFX_IGX = (\"application/vnd.micrografx.igx\", (\"igx\",))\n    APPLICATION_VND_MIF = (\"application/vnd.mif\", (\"mif\",))\n    APPLICATION_VND_MOBIUS_DAF = (\"application/vnd.mobius.daf\", (\"daf\",))\n    APPLICATION_VND_MOBIUS_DIS = (\"application/vnd.mobius.dis\", (\"dis\",))\n    APPLICATION_VND_MOBIUS_MBK = (\"application/vnd.mobius.mbk\", (\"mbk\",))\n    APPLICATION_VND_MOBIUS_MQY = (\"application/vnd.mobius.mqy\", (\"mqy\",))\n    APPLICATION_VND_MOBIUS_MSL = (\"application/vnd.mobius.msl\", (\"msl\",))\n    APPLICATION_VND_MOBIUS_PLC = (\"application/vnd.mobius.plc\", (\"plc\",))\n    APPLICATION_VND_MOBIUS_TXF = (\"application/vnd.mobius.txf\", (\"txf\",))\n    APPLICATION_VND_MOPHUN_APPLICATION = (\"application/vnd.mophun.application\", (\"mpn\",))\n    APPLICATION_VND_MOPHUN_CERTIFICATE = (\"application/vnd.mophun.certificate\", (\"mpc\",))\n    APPLICATION_VND_MOZILLA_XUL_XML = (\"application/vnd.mozilla.xul+xml\", (\"xul\",))\n    APPLICATION_VND_MS_ARTGALRY = (\"application/vnd.ms-artgalry\", (\"cil\",))\n    APPLICATION_VND_MS_CAB_COMPRESSED = (\"application/vnd.ms-cab-compressed\", (\"cab\",))\n    APPLICATION_VND_MS_EXCEL = (\"application/vnd.ms-excel\", (\"xla\", \"xlb\", \"xlc\", \"xlm\", \"xls\", \"xlt\", \"xlw\"))\n    APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12 = (\"application/vnd.ms-excel.addin.macroenabled.12\", (\"xlam\",))\n    APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12 = (\n        \"application/vnd.ms-excel.sheet.binary.macroenabled.12\",\n        (\"xlsb\",),\n    )\n    APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12 = (\"application/vnd.ms-excel.sheet.macroenabled.12\", (\"xlsm\",))\n    APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12 = (\"application/vnd.ms-excel.template.macroenabled.12\", (\"xltm\",))\n    APPLICATION_VND_MS_FONTOBJECT = (\"application/vnd.ms-fontobject\", (\"eot\",))\n    APPLICATION_VND_MS_HTMLHELP = (\"application/vnd.ms-htmlhelp\", (\"chm\",))\n    APPLICATION_VND_MS_IMS = (\"application/vnd.ms-ims\", (\"ims\",))\n    APPLICATION_VND_MS_LRM = (\"application/vnd.ms-lrm\", (\"lrm\",))\n    APPLICATION_VND_MS_PKI_SECCAT = (\"application/vnd.ms-pki.seccat\", (\"cat\",))\n    APPLICATION_VND_MS_PKI_STL = (\"application/vnd.ms-pki.stl\", (\"stl\",))\n    APPLICATION_VND_MS_POWERPOINT = (\"application/vnd.ms-powerpoint\", (\"pot\", \"ppa\", \"pps\", \"ppt\", \"pwz\"))\n    APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12 = (\n        \"application/vnd.ms-powerpoint.addin.macroenabled.12\",\n        (\"ppam\",),\n    )\n    APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12 = (\n        \"application/vnd.ms-powerpoint.presentation.macroenabled.12\",\n        (\"pptm\",),\n    )\n    APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12 = (\n        \"application/vnd.ms-powerpoint.slide.macroenabled.12\",\n        (\"sldm\",),\n    )\n    APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12 = (\n        \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\",\n        (\"ppsm\",),\n    )\n    APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12 = (\n        \"application/vnd.ms-powerpoint.template.macroenabled.12\",\n        (\"potm\",),\n    )\n    APPLICATION_VND_MS_PROJECT = (\"application/vnd.ms-project\", (\"mpp\", \"mpt\"))\n    APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12 = (\"application/vnd.ms-word.document.macroenabled.12\", (\"docm\",))\n    APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12 = (\"application/vnd.ms-word.template.macroenabled.12\", (\"dotm\",))\n    APPLICATION_VND_MS_WORKS = (\"application/vnd.ms-works\", (\"wcm\", \"wdb\", \"wks\", \"wps\"))\n    APPLICATION_VND_MS_WPL = (\"application/vnd.ms-wpl\", (\"wpl\",))\n    APPLICATION_VND_MS_XPSDOCUMENT = (\"application/vnd.ms-xpsdocument\", (\"xps\",))\n    APPLICATION_VND_MSEQ = (\"application/vnd.mseq\", (\"mseq\",))\n    APPLICATION_VND_MUSICIAN = (\"application/vnd.musician\", (\"mus\",))\n    APPLICATION_VND_MUVEE_STYLE = (\"application/vnd.muvee.style\", (\"msty\",))\n    APPLICATION_VND_NEUROLANGUAGE_NLU = (\"application/vnd.neurolanguage.nlu\", (\"nlu\",))\n    APPLICATION_VND_NOBLENET_DIRECTORY = (\"application/vnd.noblenet-directory\", (\"nnd\",))\n    APPLICATION_VND_NOBLENET_SEALER = (\"application/vnd.noblenet-sealer\", (\"nns\",))\n    APPLICATION_VND_NOBLENET_WEB = (\"application/vnd.noblenet-web\", (\"nnw\",))\n    APPLICATION_VND_NOKIA_N_GAGE_DATA = (\"application/vnd.nokia.n-gage.data\", (\"ngdat\",))\n    APPLICATION_VND_NOKIA_N_GAGE_SYMBIAN_INSTALL = (\"application/vnd.nokia.n-gage.symbian.install\", (\"n-gage\",))\n    APPLICATION_VND_NOKIA_RADIO_PRESET = (\"application/vnd.nokia.radio-preset\", (\"rpst\",))\n    APPLICATION_VND_NOKIA_RADIO_PRESETS = (\"application/vnd.nokia.radio-presets\", (\"rpss\",))\n    APPLICATION_VND_NOVADIGM_EDM = (\"application/vnd.novadigm.edm\", (\"edm\",))\n    APPLICATION_VND_NOVADIGM_EDX = (\"application/vnd.novadigm.edx\", (\"edx\",))\n    APPLICATION_VND_NOVADIGM_EXT = (\"application/vnd.novadigm.ext\", (\"ext\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_CHART = (\"application/vnd.oasis.opendocument.chart\", (\"odc\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE = (\"application/vnd.oasis.opendocument.chart-template\", (\"otc\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE = (\"application/vnd.oasis.opendocument.database\", (\"odb\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA = (\"application/vnd.oasis.opendocument.formula\", (\"odf\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE = (\n        \"application/vnd.oasis.opendocument.formula-template\",\n        (\"odft\",),\n    )\n    APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS = (\"application/vnd.oasis.opendocument.graphics\", (\"odg\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE = (\n        \"application/vnd.oasis.opendocument.graphics-template\",\n        (\"otg\",),\n    )\n    APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE = (\"application/vnd.oasis.opendocument.image\", (\"odi\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE = (\"application/vnd.oasis.opendocument.image-template\", (\"oti\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION = (\"application/vnd.oasis.opendocument.presentation\", (\"odp\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE = (\n        \"application/vnd.oasis.opendocument.presentation-template\",\n        (\"otp\",),\n    )\n    APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET = (\"application/vnd.oasis.opendocument.spreadsheet\", (\"ods\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE = (\n        \"application/vnd.oasis.opendocument.spreadsheet-template\",\n        (\"ots\",),\n    )\n    APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT = (\"application/vnd.oasis.opendocument.text\", (\"odt\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_MASTER = (\"application/vnd.oasis.opendocument.text-master\", (\"otm\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE = (\"application/vnd.oasis.opendocument.text-template\", (\"ott\",))\n    APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_WEB = (\"application/vnd.oasis.opendocument.text-web\", (\"oth\",))\n    APPLICATION_VND_OLPC_SUGAR = (\"application/vnd.olpc-sugar\", (\"xo\",))\n    APPLICATION_VND_OMA_DD2_XML = (\"application/vnd.oma.dd2+xml\", (\"dd2\",))\n    APPLICATION_VND_OPENOFFICEORG_EXTENSION = (\"application/vnd.openofficeorg.extension\", (\"oxt\",))\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION = (\n        \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n        (\"pptx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE = (\n        \"application/vnd.openxmlformats-officedocument.presentationml.slide\",\n        (\"sldx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW = (\n        \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\",\n        (\"ppsx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE = (\n        \"application/vnd.openxmlformats-officedocument.presentationml.template\",\n        (\"potx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET = (\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        (\"xlsx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE = (\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\",\n        (\"xltx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT = (\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        (\"docx\",),\n    )\n    APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE = (\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\",\n        (\"dotx\",),\n    )\n    APPLICATION_VND_OSGI_DP = (\"application/vnd.osgi.dp\", (\"dp\",))\n    APPLICATION_VND_PALM = (\"application/vnd.palm\", (\"oprc\", \"pdb\", \"pqa\"))\n    APPLICATION_VND_PG_FORMAT = (\"application/vnd.pg.format\", (\"str\",))\n    APPLICATION_VND_PG_OSASLI = (\"application/vnd.pg.osasli\", (\"ei6\",))\n    APPLICATION_VND_PICSEL = (\"application/vnd.picsel\", (\"efif\",))\n    APPLICATION_VND_POCKETLEARN = (\"application/vnd.pocketlearn\", (\"plf\",))\n    APPLICATION_VND_POWERBUILDER6 = (\"application/vnd.powerbuilder6\", (\"pbd\",))\n    APPLICATION_VND_PREVIEWSYSTEMS_BOX = (\"application/vnd.previewsystems.box\", (\"box\",))\n    APPLICATION_VND_PROTEUS_MAGAZINE = (\"application/vnd.proteus.magazine\", (\"mgz\",))\n    APPLICATION_VND_PUBLISHARE_DELTA_TREE = (\"application/vnd.publishare-delta-tree\", (\"qps\",))\n    APPLICATION_VND_PVI_PTID1 = (\"application/vnd.pvi.ptid1\", (\"ptid\",))\n    APPLICATION_VND_QUARK_QUARKXPRESS = (\n        \"application/vnd.quark.quarkxpress\",\n        (\"qwd\", \"qwt\", \"qxb\", \"qxd\", \"qxl\", \"qxt\"),\n    )\n    APPLICATION_VND_RAR = (\"application/vnd.rar\", (\"rar\",))\n    APPLICATION_VND_RECORDARE_MUSICXML = (\"application/vnd.recordare.musicxml\", (\"mxl\",))\n    APPLICATION_VND_RECORDARE_MUSICXML_XML = (\"application/vnd.recordare.musicxml+xml\", (\"musicxml\",))\n    APPLICATION_VND_RIM_COD = (\"application/vnd.rim.cod\", (\"cod\",))\n    APPLICATION_VND_RN_REALMEDIA = (\"application/vnd.rn-realmedia\", (\"rm\",))\n    APPLICATION_VND_ROUTE66_LINK66_XML = (\"application/vnd.route66.link66+xml\", (\"link66\",))\n    APPLICATION_VND_SEEMAIL = (\"application/vnd.seemail\", (\"see\",))\n    APPLICATION_VND_SEMA = (\"application/vnd.sema\", (\"sema\",))\n    APPLICATION_VND_SEMD = (\"application/vnd.semd\", (\"semd\",))\n    APPLICATION_VND_SEMF = (\"application/vnd.semf\", (\"semf\",))\n    APPLICATION_VND_SHANA_INFORMED_FORMDATA = (\"application/vnd.shana.informed.formdata\", (\"ifm\",))\n    APPLICATION_VND_SHANA_INFORMED_FORMTEMPLATE = (\"application/vnd.shana.informed.formtemplate\", (\"itp\",))\n    APPLICATION_VND_SHANA_INFORMED_INTERCHANGE = (\"application/vnd.shana.informed.interchange\", (\"iif\",))\n    APPLICATION_VND_SHANA_INFORMED_PACKAGE = (\"application/vnd.shana.informed.package\", (\"ipk\",))\n    APPLICATION_VND_SIMTECH_MINDMAPPER = (\"application/vnd.simtech-mindmapper\", (\"twd\", \"twds\"))\n    APPLICATION_VND_SMAF = (\"application/vnd.smaf\", (\"mmf\",))\n    APPLICATION_VND_SMART_TEACHER = (\"application/vnd.smart.teacher\", (\"teacher\",))\n    APPLICATION_VND_SOLENT_SDKM_XML = (\"application/vnd.solent.sdkm+xml\", (\"sdkd\", \"sdkm\"))\n    APPLICATION_VND_SPOTFIRE_DXP = (\"application/vnd.spotfire.dxp\", (\"dxp\",))\n    APPLICATION_VND_SPOTFIRE_SFS = (\"application/vnd.spotfire.sfs\", (\"sfs\",))\n    APPLICATION_VND_SQLITE3 = (\n        \"application/vnd.sqlite3\",\n        (\"db\", \"db-shm\", \"db-wal\", \"sqlite\", \"sqlite-shm\", \"sqlite-wal\", \"sqlite3\"),\n    )\n    APPLICATION_VND_STARDIVISION_CALC = (\"application/vnd.stardivision.calc\", (\"sdc\",))\n    APPLICATION_VND_STARDIVISION_DRAW = (\"application/vnd.stardivision.draw\", (\"sda\",))\n    APPLICATION_VND_STARDIVISION_IMPRESS = (\"application/vnd.stardivision.impress\", (\"sdd\",))\n    APPLICATION_VND_STARDIVISION_MATH = (\"application/vnd.stardivision.math\", (\"smf\",))\n    APPLICATION_VND_STARDIVISION_WRITER = (\"application/vnd.stardivision.writer\", (\"sdw\", \"vor\"))\n    APPLICATION_VND_STARDIVISION_WRITER_GLOBAL = (\"application/vnd.stardivision.writer-global\", (\"sgl\",))\n    APPLICATION_VND_SUN_XML_CALC = (\"application/vnd.sun.xml.calc\", (\"sxc\",))\n    APPLICATION_VND_SUN_XML_CALC_TEMPLATE = (\"application/vnd.sun.xml.calc.template\", (\"stc\",))\n    APPLICATION_VND_SUN_XML_DRAW = (\"application/vnd.sun.xml.draw\", (\"sxd\",))\n    APPLICATION_VND_SUN_XML_DRAW_TEMPLATE = (\"application/vnd.sun.xml.draw.template\", (\"std\",))\n    APPLICATION_VND_SUN_XML_IMPRESS = (\"application/vnd.sun.xml.impress\", (\"sxi\",))\n    APPLICATION_VND_SUN_XML_IMPRESS_TEMPLATE = (\"application/vnd.sun.xml.impress.template\", (\"sti\",))\n    APPLICATION_VND_SUN_XML_MATH = (\"application/vnd.sun.xml.math\", (\"sxm\",))\n    APPLICATION_VND_SUN_XML_WRITER = (\"application/vnd.sun.xml.writer\", (\"sxw\",))\n    APPLICATION_VND_SUN_XML_WRITER_GLOBAL = (\"application/vnd.sun.xml.writer.global\", (\"sxg\",))\n    APPLICATION_VND_SUN_XML_WRITER_TEMPLATE = (\"application/vnd.sun.xml.writer.template\", (\"stw\",))\n    APPLICATION_VND_SUS_CALENDAR = (\"application/vnd.sus-calendar\", (\"sus\", \"susp\"))\n    APPLICATION_VND_SVD = (\"application/vnd.svd\", (\"svd\",))\n    APPLICATION_VND_SYMBIAN_INSTALL = (\"application/vnd.symbian.install\", (\"sis\", \"sisx\"))\n    APPLICATION_VND_SYNCML_XML = (\"application/vnd.syncml+xml\", (\"xsm\",))\n    APPLICATION_VND_SYNCML_DM_WBXML = (\"application/vnd.syncml.dm+wbxml\", (\"bdm\",))\n    APPLICATION_VND_SYNCML_DM_XML = (\"application/vnd.syncml.dm+xml\", (\"xdm\",))\n    APPLICATION_VND_TAO_INTENT_MODULE_ARCHIVE = (\"application/vnd.tao.intent-module-archive\", (\"tao\",))\n    APPLICATION_VND_TMOBILE_LIVETV = (\"application/vnd.tmobile-livetv\", (\"tmo\",))\n    APPLICATION_VND_TRID_TPT = (\"application/vnd.trid.tpt\", (\"tpt\",))\n    APPLICATION_VND_TRISCAPE_MXS = (\"application/vnd.triscape.mxs\", (\"mxs\",))\n    APPLICATION_VND_TRUEAPP = (\"application/vnd.trueapp\", (\"tra\",))\n    APPLICATION_VND_UFDL = (\"application/vnd.ufdl\", (\"ufd\", \"ufdl\"))\n    APPLICATION_VND_UIQ_THEME = (\"application/vnd.uiq.theme\", (\"utz\",))\n    APPLICATION_VND_UMAJIN = (\"application/vnd.umajin\", (\"umj\",))\n    APPLICATION_VND_UNITY = (\"application/vnd.unity\", (\"unityweb\",))\n    APPLICATION_VND_UOML_XML = (\"application/vnd.uoml+xml\", (\"uoml\",))\n    APPLICATION_VND_VCX = (\"application/vnd.vcx\", (\"vcx\",))\n    APPLICATION_VND_VISIO = (\n        \"application/vnd.visio\",\n        (\"vsd\", \"vsdx\", \"vss\", \"vssm\", \"vssx\", \"vst\", \"vstm\", \"vstx\", \"vsw\"),\n    )\n    APPLICATION_VND_VISIONARY = (\"application/vnd.visionary\", (\"vis\",))\n    APPLICATION_VND_VSF = (\"application/vnd.vsf\", (\"vsf\",))\n    APPLICATION_VND_WAP_SIC = (\"application/vnd.wap.sic\", (\"sic\",))\n    APPLICATION_VND_WAP_SLC = (\"application/vnd.wap.slc\", (\"slc\",))\n    APPLICATION_VND_WAP_WBXML = (\"application/vnd.wap.wbxml\", (\"wbxml\",))\n    APPLICATION_VND_WAP_WMLC = (\"application/vnd.wap.wmlc\", (\"wmlc\",))\n    APPLICATION_VND_WAP_WMLSCRIPTC = (\"application/vnd.wap.wmlscriptc\", (\"wmlsc\",))\n    APPLICATION_VND_WEBTURBO = (\"application/vnd.webturbo\", (\"wtb\",))\n    APPLICATION_VND_WORDPERFECT = (\"application/vnd.wordperfect\", (\"wpd\",))\n    APPLICATION_VND_WQD = (\"application/vnd.wqd\", (\"wqd\",))\n    APPLICATION_VND_WT_STF = (\"application/vnd.wt.stf\", (\"stf\",))\n    APPLICATION_VND_XARA = (\"application/vnd.xara\", (\"xar\",))\n    APPLICATION_VND_XFDL = (\"application/vnd.xfdl\", (\"xfdl\",))\n    APPLICATION_VND_YAMAHA_HV_DIC = (\"application/vnd.yamaha.hv-dic\", (\"hvd\",))\n    APPLICATION_VND_YAMAHA_HV_SCRIPT = (\"application/vnd.yamaha.hv-script\", (\"hvs\",))\n    APPLICATION_VND_YAMAHA_HV_VOICE = (\"application/vnd.yamaha.hv-voice\", (\"hvp\",))\n    APPLICATION_VND_YAMAHA_OPENSCOREFORMAT = (\"application/vnd.yamaha.openscoreformat\", (\"osf\",))\n    APPLICATION_VND_YAMAHA_OPENSCOREFORMAT_OSFPVG_XML = (\n        \"application/vnd.yamaha.openscoreformat.osfpvg+xml\",\n        (\"osfpvg\",),\n    )\n    APPLICATION_VND_YAMAHA_SMAF_AUDIO = (\"application/vnd.yamaha.smaf-audio\", (\"saf\",))\n    APPLICATION_VND_YAMAHA_SMAF_PHRASE = (\"application/vnd.yamaha.smaf-phrase\", (\"spf\",))\n    APPLICATION_VND_YELLOWRIVER_CUSTOM_MENU = (\"application/vnd.yellowriver-custom-menu\", (\"cmp\",))\n    APPLICATION_VND_ZUL = (\"application/vnd.zul\", (\"zir\", \"zirz\"))\n    APPLICATION_VND_ZZAZZ_DECK_XML = (\"application/vnd.zzazz.deck+xml\", (\"zaz\",))\n    APPLICATION_VOICEXML_XML = (\"application/voicexml+xml\", (\"vxml\",))\n    APPLICATION_WASM = (\"application/wasm\", (\"wasm\",))\n    APPLICATION_WINHLP = (\"application/winhlp\", (\"hlp\",))\n    APPLICATION_WSDL_XML = (\"application/wsdl+xml\", (\"wsdl\",))\n    APPLICATION_WSPOLICY_XML = (\"application/wspolicy+xml\", (\"wspolicy\",))\n    APPLICATION_X_7Z_COMPRESSED = (\"application/x-7z-compressed\", (\"7z\",))\n    APPLICATION_X_ABIWORD = (\"application/x-abiword\", (\"abw\", \"abw.gz\", \"zabw\"))\n    APPLICATION_X_ACE_COMPRESSED = (\"application/x-ace-compressed\", (\"ace\",))\n    APPLICATION_X_AUTHORWARE_BIN = (\"application/x-authorware-bin\", (\"aab\", \"u32\", \"vox\", \"x32\"))\n    APPLICATION_X_AUTHORWARE_MAP = (\"application/x-authorware-map\", (\"aam\",))\n    APPLICATION_X_AUTHORWARE_SEG = (\"application/x-authorware-seg\", (\"aas\",))\n    APPLICATION_X_BCPIO = (\"application/x-bcpio\", (\"bcpio\",))\n    APPLICATION_X_BITTORRENT = (\"application/x-bittorrent\", (\"torrent\",))\n    APPLICATION_X_BZIP = (\"application/x-bzip\", (\"bz\",))\n    APPLICATION_X_BZIP2 = (\"application/x-bzip2\", (\"boz\", \"bz2\"))\n    APPLICATION_X_CDLINK = (\"application/x-cdlink\", (\"vcd\",))\n    APPLICATION_X_CHAT = (\"application/x-chat\", (\"chat\",))\n    APPLICATION_X_CHESS_PGN = (\"application/x-chess-pgn\", (\"pgn\",))\n    APPLICATION_X_CPIO = (\"application/x-cpio\", (\"cpio\",))\n    APPLICATION_X_CSH = (\"application/x-csh\", (\"csh\",))\n    APPLICATION_X_DEBIAN_PACKAGE = (\"application/x-debian-package\", (\"deb\", \"udeb\"))\n    APPLICATION_X_DIRECTOR = (\"application/x-director\", (\"cct\", \"cst\", \"cxt\", \"dcr\", \"dir\", \"dxr\", \"fgd\", \"swa\", \"w3d\"))\n    APPLICATION_X_DOOM = (\"application/x-doom\", (\"wad\",))\n    APPLICATION_X_DTBNCX_XML = (\"application/x-dtbncx+xml\", (\"ncx\",))\n    APPLICATION_X_DTBOOK_XML = (\"application/x-dtbook+xml\", (\"dtb\",))\n    APPLICATION_X_DTBRESOURCE_XML = (\"application/x-dtbresource+xml\", (\"res\",))\n    APPLICATION_X_DVI = (\"application/x-dvi\", (\"dvi\",))\n    APPLICATION_X_FONT_BDF = (\"application/x-font-bdf\", (\"bdf\",))\n    APPLICATION_X_FONT_GHOSTSCRIPT = (\"application/x-font-ghostscript\", (\"gsf\",))\n    APPLICATION_X_FONT_LINUX_PSF = (\"application/x-font-linux-psf\", (\"psf\",))\n    APPLICATION_X_FONT_OTF = (\"application/x-font-otf\", (\"otf\",))\n    APPLICATION_X_FONT_PCF = (\"application/x-font-pcf\", (\"pcf\",))\n    APPLICATION_X_FONT_SNF = (\"application/x-font-snf\", (\"snf\",))\n    APPLICATION_X_FONT_TTF = (\"application/x-font-ttf\", (\"ttc\", \"ttf\"))\n    APPLICATION_X_FONT_TYPE1 = (\"application/x-font-type1\", (\"afm\", \"pfa\", \"pfb\", \"pfm\"))\n    APPLICATION_X_FUTURESPLASH = (\"application/x-futuresplash\", (\"spl\",))\n    APPLICATION_X_GNUMERIC = (\"application/x-gnumeric\", (\"gnumeric\",))\n    APPLICATION_X_GTAR = (\"application/x-gtar\", (\"gtar\",))\n    APPLICATION_X_GZIP = (\"application/x-gzip\", (\"gz\", \"tgz\"))\n    APPLICATION_X_HDF = (\"application/x-hdf\", (\"hdf\",))\n    APPLICATION_X_ISO9660_IMAGE = (\"application/x-iso9660-image\", (\"cdr\", \"iso\", \"isoimg\"))\n    APPLICATION_X_JAVA_JNLP_FILE = (\"application/x-java-jnlp-file\", (\"jnlp\",))\n    APPLICATION_X_KILLUSTRATOR = (\"application/x-killustrator\", (\"kil\",))\n    APPLICATION_X_KRITA = (\"application/x-krita\", (\"kra\", \"krz\"))\n    APPLICATION_X_LATEX = (\"application/x-latex\", (\"latex\",))\n    APPLICATION_X_MOBIPOCKET_EBOOK = (\"application/x-mobipocket-ebook\", (\"mobi\", \"prc\"))\n    APPLICATION_X_MS_APPLICATION = (\"application/x-ms-application\", (\"application\",))\n    APPLICATION_X_MS_WMD = (\"application/x-ms-wmd\", (\"wmd\",))\n    APPLICATION_X_MS_WMZ = (\"application/x-ms-wmz\", (\"wmz\",))\n    APPLICATION_X_MS_XBAP = (\"application/x-ms-xbap\", (\"xbap\",))\n    APPLICATION_X_MSACCESS = (\"application/x-msaccess\", (\"mdb\",))\n    APPLICATION_X_MSBINDER = (\"application/x-msbinder\", (\"obd\",))\n    APPLICATION_X_MSCARDFILE = (\"application/x-mscardfile\", (\"crd\",))\n    APPLICATION_X_MSCLIP = (\"application/x-msclip\", (\"clp\",))\n    APPLICATION_X_MSDOWNLOAD = (\"application/x-msdownload\", (\"bat\", \"com\", \"dll\", \"exe\", \"msi\"))\n    APPLICATION_X_MSMEDIAVIEW = (\"application/x-msmediaview\", (\"m13\", \"m14\", \"mvb\"))\n    APPLICATION_X_MSMETAFILE = (\"application/x-msmetafile\", (\"wmf\",))\n    APPLICATION_X_MSMONEY = (\"application/x-msmoney\", (\"mny\",))\n    APPLICATION_X_MSPUBLISHER = (\"application/x-mspublisher\", (\"pub\",))\n    APPLICATION_X_MSSCHEDULE = (\"application/x-msschedule\", (\"scd\",))\n    APPLICATION_X_MSTERMINAL = (\"application/x-msterminal\", (\"trm\",))\n    APPLICATION_X_MSWRITE = (\"application/x-mswrite\", (\"wri\",))\n    APPLICATION_X_NETCDF = (\"application/x-netcdf\", (\"cdf\", \"nc\"))\n    APPLICATION_X_PERL = (\"application/x-perl\", (\"pl\", \"pm\"))\n    APPLICATION_X_PKCS12 = (\"application/x-pkcs12\", (\"p12\", \"pfx\"))\n    APPLICATION_X_PKCS7_CERTIFICATES = (\"application/x-pkcs7-certificates\", (\"p7b\", \"spc\"))\n    APPLICATION_X_PKCS7_CERTREQRESP = (\"application/x-pkcs7-certreqresp\", (\"p7r\",))\n    APPLICATION_X_RAR_COMPRESSED = (\"application/x-rar-compressed\", (\"rar\",))\n    APPLICATION_X_REDHAT_PACKAGE_MANAGER = (\"application/x-redhat-package-manager\", (\"rpa\",))\n    APPLICATION_X_RPM = (\"application/x-rpm\", (\"rpm\",))\n    APPLICATION_X_SH = (\"application/x-sh\", (\"sh\",))\n    APPLICATION_X_SHAR = (\"application/x-shar\", (\"shar\",))\n    APPLICATION_X_SHELLSCRIPT = (\"application/x-shellscript\", (\"sh\",))\n    APPLICATION_X_SHOCKWAVE_FLASH = (\"application/x-shockwave-flash\", (\"swf\",))\n    APPLICATION_X_SILVERLIGHT_APP = (\"application/x-silverlight-app\", (\"xap\",))\n    APPLICATION_X_STUFFIT = (\"application/x-stuffit\", (\"sit\",))\n    APPLICATION_X_STUFFITX = (\"application/x-stuffitx\", (\"sitx\",))\n    APPLICATION_X_SV4CPIO = (\"application/x-sv4cpio\", (\"sv4cpio\",))\n    APPLICATION_X_SV4CRC = (\"application/x-sv4crc\", (\"sv4crc\",))\n    APPLICATION_X_TAR = (\"application/x-tar\", (\"tar\",))\n    APPLICATION_X_TCL = (\"application/x-tcl\", (\"tcl\",))\n    APPLICATION_X_TEX = (\"application/x-tex\", (\"tex\",))\n    APPLICATION_X_TEX_TFM = (\"application/x-tex-tfm\", (\"tfm\",))\n    APPLICATION_X_TEXINFO = (\"application/x-texinfo\", (\"texi\", \"texinfo\"))\n    APPLICATION_X_TRASH = (\"application/x-trash\", ())\n    APPLICATION_X_USTAR = (\"application/x-ustar\", (\"ustar\",))\n    APPLICATION_X_WAIS_SOURCE = (\"application/x-wais-source\", (\"src\",))\n    APPLICATION_X_X509_CA_CERT = (\"application/x-x509-ca-cert\", (\"crt\", \"der\"))\n    APPLICATION_X_XFIG = (\"application/x-xfig\", (\"fig\",))\n    APPLICATION_X_XPINSTALL = (\"application/x-xpinstall\", (\"xpi\",))\n    APPLICATION_X_ZIP_COMPRESSED = (\"application/x-zip-compressed\", (\"zip\",))\n    APPLICATION_XENC_XML = (\"application/xenc+xml\", (\"xenc\",))\n    APPLICATION_XHTML_XML = (\"application/xhtml+xml\", (\"xht\", \"xhtml\"))\n    APPLICATION_XML = (\"application/xml\", (\"xml\", \"xpdl\", \"xsl\"))\n    APPLICATION_XML_DTD = (\"application/xml-dtd\", (\"dtd\",))\n    APPLICATION_XOP_XML = (\"application/xop+xml\", (\"xop\",))\n    APPLICATION_XSLT_XML = (\"application/xslt+xml\", (\"xslt\",))\n    APPLICATION_XSPF_XML = (\"application/xspf+xml\", (\"xspf\",))\n    APPLICATION_XV_XML = (\"application/xv+xml\", (\"mxml\", \"xhvml\", \"xvm\", \"xvml\"))\n    APPLICATION_YAML = (\"application/yaml\", (\"yaml\", \"yml\"))\n    APPLICATION_ZIP = (\"application/zip\", (\"zip\",))\n    APPLICATION_ZIP_COMPRESSED = (\"application/zip-compressed\", (\"zip\",))\n    AUDIO_3GPP2 = (\"audio/3gpp2\", (\"3g2\",))\n    AUDIO_AAC = (\"audio/aac\", (\"aac\", \"m4a\"))\n    AUDIO_AACP = (\"audio/aacp\", (\"aacp\",))\n    AUDIO_ADPCM = (\"audio/adpcm\", (\"adp\",))\n    AUDIO_AIFF = (\"audio/aiff\", (\"aff\", \"aif\", \"aiff\"))\n    AUDIO_BASIC = (\"audio/basic\", (\"au\", \"snd\"))\n    AUDIO_FLAC = (\"audio/flac\", (\"flac\",))\n    AUDIO_MIDI = (\"audio/midi\", (\"kar\", \"mid\", \"midi\", \"rmi\"))\n    AUDIO_MP4 = (\n        \"audio/mp4\",\n        (\"3g2\", \"3ga\", \"3gp\", \"3gp2\", \"3gpa\", \"3gpp\", \"3gpp2\", \"m4a\", \"m4b\", \"m4p\", \"m4r\", \"m4v\", \"mp4\", \"mp4v\"),\n    )\n    AUDIO_MP4A_LATM = (\"audio/mp4a-latm\", ())\n    AUDIO_MPEG = (\"audio/mpeg\", (\"m2a\", \"m3a\", \"mp2\", \"mp2a\", \"mp3\", \"mpga\"))\n    AUDIO_OGG = (\"audio/ogg\", (\"oga\", \"ogg\", \"spx\"))\n    AUDIO_OPUS = (\"audio/opus\", (\"opus\",))\n    AUDIO_VND_DIGITAL_WINDS = (\"audio/vnd.digital-winds\", (\"eol\",))\n    AUDIO_VND_DTS = (\"audio/vnd.dts\", (\"dts\",))\n    AUDIO_VND_DTS_HD = (\"audio/vnd.dts.hd\", (\"dtshd\",))\n    AUDIO_VND_LUCENT_VOICE = (\"audio/vnd.lucent.voice\", (\"lvp\",))\n    AUDIO_VND_MS_PLAYREADY_MEDIA_PYA = (\"audio/vnd.ms-playready.media.pya\", (\"pya\",))\n    AUDIO_VND_NUERA_ECELP4800 = (\"audio/vnd.nuera.ecelp4800\", (\"ecelp4800\",))\n    AUDIO_VND_NUERA_ECELP7470 = (\"audio/vnd.nuera.ecelp7470\", (\"ecelp7470\",))\n    AUDIO_VND_NUERA_ECELP9600 = (\"audio/vnd.nuera.ecelp9600\", (\"ecelp9600\",))\n    AUDIO_VND_WAV = (\"audio/vnd.wav\", (\"wav\",))\n    AUDIO_WEBM = (\"audio/webm\", (\"weba\",))\n    AUDIO_X_MATROSKA = (\"audio/x-matroska\", (\"mka\",))\n    AUDIO_X_MPEGURL = (\"audio/x-mpegurl\", (\"m3u\",))\n    AUDIO_X_MS_WAX = (\"audio/x-ms-wax\", (\"wax\",))\n    AUDIO_X_MS_WMA = (\"audio/x-ms-wma\", (\"wma\",))\n    AUDIO_X_PN_REALAUDIO = (\"audio/x-pn-realaudio\", (\"ra\", \"ram\"))\n    AUDIO_X_PN_REALAUDIO_PLUGIN = (\"audio/x-pn-realaudio-plugin\", (\"rmp\",))\n    CHEMICAL_X_CDX = (\"chemical/x-cdx\", (\"cdx\",))\n    CHEMICAL_X_CIF = (\"chemical/x-cif\", (\"cif\",))\n    CHEMICAL_X_CMDF = (\"chemical/x-cmdf\", (\"cmdf\",))\n    CHEMICAL_X_CML = (\"chemical/x-cml\", (\"cml\",))\n    CHEMICAL_X_CSML = (\"chemical/x-csml\", (\"csml\",))\n    CHEMICAL_X_XYZ = (\"chemical/x-xyz\", (\"xyz\",))\n    FONT_OTF = (\"font/otf\", (\"otf\",))\n    FONT_WOFF = (\"font/woff\", (\"woff\",))\n    FONT_WOFF2 = (\"font/woff2\", (\"woff2\",))\n    GCODE = (\"gcode\", (\"gcode\",))\n    IMAGE_AVIF = (\"image/avif\", (\"avif\",))\n    IMAGE_AVIF_SEQUENCE = (\"image/avif-sequence\", (\"avifs\",))\n    IMAGE_BMP = (\"image/bmp\", (\"bmp\",))\n    IMAGE_CGM = (\"image/cgm\", (\"cgm\",))\n    IMAGE_G3FAX = (\"image/g3fax\", (\"g3\",))\n    IMAGE_GIF = (\"image/gif\", (\"gif\",))\n    IMAGE_HEIC = (\"image/heic\", (\"heic\", \"heif\"))\n    IMAGE_IEF = (\"image/ief\", (\"ief\",))\n    IMAGE_JPEG = (\"image/jpeg\", (\"jfif\", \"jfif-tbnl\", \"jif\", \"jpe\", \"jpeg\", \"jpg\", \"pjpg\"))\n    IMAGE_PJPEG = (\"image/pjpeg\", (\"jfi\", \"jfif\", \"jfif-tbnl\", \"jif\", \"jpe\", \"jpeg\", \"jpg\", \"pjpg\"))\n    IMAGE_PNG = (\"image/png\", (\"png\",))\n    IMAGE_PRS_BTIF = (\"image/prs.btif\", (\"btif\",))\n    IMAGE_SVG_XML = (\"image/svg+xml\", (\"svg\", \"svgz\"))\n    IMAGE_TIFF = (\"image/tiff\", (\"tif\", \"tiff\"))\n    IMAGE_VND_ADOBE_PHOTOSHOP = (\"image/vnd.adobe.photoshop\", (\"psd\",))\n    IMAGE_VND_DJVU = (\"image/vnd.djvu\", (\"djv\", \"djvu\"))\n    IMAGE_VND_DWG = (\"image/vnd.dwg\", (\"dwg\",))\n    IMAGE_VND_DXF = (\"image/vnd.dxf\", (\"dxf\",))\n    IMAGE_VND_FASTBIDSHEET = (\"image/vnd.fastbidsheet\", (\"fbs\",))\n    IMAGE_VND_FPX = (\"image/vnd.fpx\", (\"fpx\",))\n    IMAGE_VND_FST = (\"image/vnd.fst\", (\"fst\",))\n    IMAGE_VND_FUJIXEROX_EDMICS_MMR = (\"image/vnd.fujixerox.edmics-mmr\", (\"mmr\",))\n    IMAGE_VND_FUJIXEROX_EDMICS_RLC = (\"image/vnd.fujixerox.edmics-rlc\", (\"rlc\",))\n    IMAGE_VND_MS_MODI = (\"image/vnd.ms-modi\", (\"mdi\",))\n    IMAGE_VND_NET_FPX = (\"image/vnd.net-fpx\", (\"npx\",))\n    IMAGE_VND_WAP_WBMP = (\"image/vnd.wap.wbmp\", (\"wbmp\",))\n    IMAGE_VND_XIFF = (\"image/vnd.xiff\", (\"xif\",))\n    IMAGE_WEBP = (\"image/webp\", (\"webp\",))\n    IMAGE_X_ADOBE_DNG = (\"image/x-adobe-dng\", (\"dng\",))\n    IMAGE_X_CANON_CR2 = (\"image/x-canon-cr2\", (\"cr2\",))\n    IMAGE_X_CANON_CRW = (\"image/x-canon-crw\", (\"crw\",))\n    IMAGE_X_CMU_RASTER = (\"image/x-cmu-raster\", (\"ras\",))\n    IMAGE_X_CMX = (\"image/x-cmx\", (\"cmx\",))\n    IMAGE_X_EPSON_ERF = (\"image/x-epson-erf\", (\"erf\",))\n    IMAGE_X_FREEHAND = (\"image/x-freehand\", (\"fh\", \"fh4\", \"fh5\", \"fh7\", \"fhc\"))\n    IMAGE_X_FUJI_RAF = (\"image/x-fuji-raf\", (\"raf\",))\n    IMAGE_X_ICNS = (\"image/x-icns\", (\"icns\",))\n    IMAGE_X_ICON = (\"image/x-icon\", (\"ico\",))\n    IMAGE_X_KODAK_DCR = (\"image/x-kodak-dcr\", (\"dcr\",))\n    IMAGE_X_KODAK_K25 = (\"image/x-kodak-k25\", (\"k25\",))\n    IMAGE_X_KODAK_KDC = (\"image/x-kodak-kdc\", (\"kdc\",))\n    IMAGE_X_MINOLTA_MRW = (\"image/x-minolta-mrw\", (\"mrw\",))\n    IMAGE_X_NIKON_NEF = (\"image/x-nikon-nef\", (\"nef\",))\n    IMAGE_X_OLYMPUS_ORF = (\"image/x-olympus-orf\", (\"orf\",))\n    IMAGE_X_PANASONIC_RAW = (\"image/x-panasonic-raw\", (\"raw\", \"rw2\", \"rwl\"))\n    IMAGE_X_PCX = (\"image/x-pcx\", (\"pcx\",))\n    IMAGE_X_PENTAX_PEF = (\"image/x-pentax-pef\", (\"pef\", \"ptx\"))\n    IMAGE_X_PICT = (\"image/x-pict\", (\"pct\", \"pic\"))\n    IMAGE_X_PORTABLE_ANYMAP = (\"image/x-portable-anymap\", (\"pnm\",))\n    IMAGE_X_PORTABLE_BITMAP = (\"image/x-portable-bitmap\", (\"pbm\",))\n    IMAGE_X_PORTABLE_GRAYMAP = (\"image/x-portable-graymap\", (\"pgm\",))\n    IMAGE_X_PORTABLE_PIXMAP = (\"image/x-portable-pixmap\", (\"ppm\",))\n    IMAGE_X_RGB = (\"image/x-rgb\", (\"rgb\",))\n    IMAGE_X_SIGMA_X3F = (\"image/x-sigma-x3f\", (\"x3f\",))\n    IMAGE_X_SONY_ARW = (\"image/x-sony-arw\", (\"arw\",))\n    IMAGE_X_SONY_SR2 = (\"image/x-sony-sr2\", (\"sr2\",))\n    IMAGE_X_SONY_SRF = (\"image/x-sony-srf\", (\"srf\",))\n    IMAGE_X_XBITMAP = (\"image/x-xbitmap\", (\"xbm\",))\n    IMAGE_X_XPIXMAP = (\"image/x-xpixmap\", (\"xpm\",))\n    IMAGE_X_XWINDOWDUMP = (\"image/x-xwindowdump\", (\"xwd\",))\n    MESSAGE_RFC822 = (\"message/rfc822\", (\"eml\", \"mht\", \"mhtml\", \"mime\", \"nws\"))\n    MODEL_IGES = (\"model/iges\", (\"iges\", \"igs\"))\n    MODEL_MESH = (\"model/mesh\", (\"mesh\", \"msh\", \"silo\"))\n    MODEL_VND_DWF = (\"model/vnd.dwf\", (\"dwf\",))\n    MODEL_VND_GDL = (\"model/vnd.gdl\", (\"gdl\",))\n    MODEL_VND_GTW = (\"model/vnd.gtw\", (\"gtw\",))\n    MODEL_VND_MTS = (\"model/vnd.mts\", (\"mts\",))\n    MODEL_VND_VTU = (\"model/vnd.vtu\", (\"vtu\",))\n    MODEL_VRML = (\"model/vrml\", (\"vrml\", \"wrl\"))\n    TEST_MIMETYPE = (\"test/mimetype\", (\"test\",))\n    TEXT_CALENDAR = (\"text/calendar\", (\"ics\", \"ifb\"))\n    TEXT_CSS = (\"text/css\", (\"css\",))\n    TEXT_CSV = (\"text/csv\", (\"csv\",))\n    TEXT_HTML = (\"text/html\", (\"htm\", \"html\"))\n    TEXT_JAVASCRIPT = (\"text/javascript\", (\"js\",))\n    TEXT_MARKDOWN = (\"text/markdown\", (\"markdn\", \"markdown\", \"md\", \"mdown\"))\n    TEXT_MATHML = (\"text/mathml\", (\"mathml\", \"mml\"))\n    TEXT_PLAIN = (\"text/plain\", (\"conf\", \"def\", \"diff\", \"in\", \"ksh\", \"list\", \"log\", \"pl\", \"text\", \"txt\"))\n    TEXT_PRS_LINES_TAG = (\"text/prs.lines.tag\", (\"dsc\",))\n    TEXT_RICHTEXT = (\"text/richtext\", (\"rtx\",))\n    TEXT_SGML = (\"text/sgml\", (\"sgm\", \"sgml\"))\n    TEXT_TAB_SEPARATED_VALUES = (\"text/tab-separated-values\", (\"tsv\",))\n    TEXT_TROFF = (\"text/troff\", (\"man\", \"me\", \"ms\", \"roff\", \"t\", \"tr\"))\n    TEXT_URI_LIST = (\"text/uri-list\", (\"uri\", \"uris\", \"urls\"))\n    TEXT_VND_CURL = (\"text/vnd.curl\", (\"curl\",))\n    TEXT_VND_CURL_DCURL = (\"text/vnd.curl.dcurl\", (\"dcurl\",))\n    TEXT_VND_CURL_MCURL = (\"text/vnd.curl.mcurl\", (\"mcurl\",))\n    TEXT_VND_CURL_SCURL = (\"text/vnd.curl.scurl\", (\"scurl\",))\n    TEXT_VND_FLY = (\"text/vnd.fly\", (\"fly\",))\n    TEXT_VND_FMI_FLEXSTOR = (\"text/vnd.fmi.flexstor\", (\"flx\",))\n    TEXT_VND_GRAPHVIZ = (\"text/vnd.graphviz\", (\"gv\",))\n    TEXT_VND_IN3D_3DML = (\"text/vnd.in3d.3dml\", (\"3dml\",))\n    TEXT_VND_IN3D_SPOT = (\"text/vnd.in3d.spot\", (\"spot\",))\n    TEXT_VND_SUN_J2ME_APP_DESCRIPTOR = (\"text/vnd.sun.j2me.app-descriptor\", (\"jad\",))\n    TEXT_VND_WAP_SI = (\"text/vnd.wap.si\", (\"si\",))\n    TEXT_VND_WAP_SL = (\"text/vnd.wap.sl\", (\"sl\",))\n    TEXT_VND_WAP_WML = (\"text/vnd.wap.wml\", (\"wml\",))\n    TEXT_VND_WAP_WMLSCRIPT = (\"text/vnd.wap.wmlscript\", (\"wmls\",))\n    TEXT_X_ASM = (\"text/x-asm\", (\"asm\", \"s\"))\n    TEXT_X_C = (\"text/x-c\", (\"c\", \"cc\", \"cpp\", \"cxx\", \"dic\", \"h\", \"hh\"))\n    TEXT_X_FORTRAN = (\"text/x-fortran\", (\"f\", \"f77\", \"f90\", \"for\"))\n    TEXT_X_JAVA_SOURCE = (\"text/x-java-source\", (\"java\",))\n    TEXT_X_PASCAL = (\"text/x-pascal\", (\"inc\", \"p\", \"pas\", \"pp\"))\n    TEXT_X_PYTHON = (\"text/x-python\", (\"py\", \"pyc\", \"pyd\", \"pyo\", \"whl\"))\n    TEXT_X_SETEXT = (\"text/x-setext\", (\"etx\",))\n    TEXT_X_UUENCODE = (\"text/x-uuencode\", (\"uu\",))\n    TEXT_X_VCALENDAR = (\"text/x-vcalendar\", (\"vcs\",))\n    TEXT_X_VCARD = (\"text/x-vcard\", (\"vcf\",))\n    VIDEO_3GPP = (\"video/3gpp\", (\"3gp\",))\n    VIDEO_3GPP2 = (\"video/3gpp2\", (\"3g2\",))\n    VIDEO_H261 = (\"video/h261\", (\"h261\",))\n    VIDEO_H263 = (\"video/h263\", (\"h263\",))\n    VIDEO_H264 = (\"video/h264\", (\"h264\",))\n    VIDEO_JPEG = (\"video/jpeg\", (\"jpgv\",))\n    VIDEO_JPM = (\"video/jpm\", (\"jpgm\", \"jpm\"))\n    VIDEO_MJ2 = (\"video/mj2\", (\"mj2\", \"mjp2\"))\n    VIDEO_MP2T = (\"video/mp2t\", (\"ts\",))\n    VIDEO_MP4 = (\"video/mp4\", (\"mp4\", \"mp4v\", \"mpg4\"))\n    VIDEO_MPEG = (\"video/mpeg\", (\"m1v\", \"m2v\", \"mpa\", \"mpe\", \"mpeg\", \"mpg\"))\n    VIDEO_OGG = (\"video/ogg\", (\"ogv\",))\n    VIDEO_QUICKTIME = (\"video/quicktime\", (\"mov\", \"qt\"))\n    VIDEO_VND_FVT = (\"video/vnd.fvt\", (\"fvt\",))\n    VIDEO_VND_MPEGURL = (\"video/vnd.mpegurl\", (\"m4u\", \"mxu\"))\n    VIDEO_VND_MS_PLAYREADY_MEDIA_PYV = (\"video/vnd.ms-playready.media.pyv\", (\"pyv\",))\n    VIDEO_VND_VIVO = (\"video/vnd.vivo\", (\"viv\",))\n    VIDEO_WEBM = (\"video/webm\", (\"webm\",))\n    VIDEO_X_F4V = (\"video/x-f4v\", (\"f4v\",))\n    VIDEO_X_FLI = (\"video/x-fli\", (\"fli\",))\n    VIDEO_X_FLV = (\"video/x-flv\", (\"flv\",))\n    VIDEO_X_M4V = (\"video/x-m4v\", (\"m4v\",))\n    VIDEO_X_MATROSKA = (\"video/x-matroska\", (\"mkv\",))\n    VIDEO_X_MS_ASF = (\"video/x-ms-asf\", (\"asf\", \"asx\"))\n    VIDEO_X_MS_WM = (\"video/x-ms-wm\", (\"wm\",))\n    VIDEO_X_MS_WMV = (\"video/x-ms-wmv\", (\"wmv\",))\n    VIDEO_X_MS_WMX = (\"video/x-ms-wmx\", (\"wmx\",))\n    VIDEO_X_MS_WVX = (\"video/x-ms-wvx\", (\"wvx\",))\n    VIDEO_X_MSVIDEO = (\"video/x-msvideo\", (\"avi\",))\n    VIDEO_X_SGI_MOVIE = (\"video/x-sgi-movie\", (\"movie\",))\n    X_CONFERENCE_X_COOLTALK = (\"x-conference/x-cooltalk\", (\"ice\",))\n\n    # Convenient aliases for commonly used MIME types with verbose names\n    APPLICATION_DOCX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\n    APPLICATION_DOTX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE\n    APPLICATION_POTX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE\n    APPLICATION_PPSX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW\n    APPLICATION_PPTX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION\n    APPLICATION_SLDX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE\n    APPLICATION_XLSX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET\n    APPLICATION_XLTX = APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE\n</code></pre>"},{"location":"api/#convenient-aliases","title":"Convenient Aliases","text":"<p>The <code>MimeType</code> enum includes convenient aliases for commonly used MIME types with verbose names. These aliases point to the exact same enum instances as their full counterparts.</p>"},{"location":"api/#microsoft-office-format-aliases","title":"Microsoft Office Format Aliases","text":"<ul> <li><code>APPLICATION_DOCX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT</code></li> <li><code>APPLICATION_DOTX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE</code></li> <li><code>APPLICATION_XLSX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET</code></li> <li><code>APPLICATION_XLTX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE</code></li> <li><code>APPLICATION_PPTX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION</code></li> <li><code>APPLICATION_POTX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE</code></li> <li><code>APPLICATION_PPSX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW</code></li> <li><code>APPLICATION_SLDX</code> \u2192 <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE</code></li> </ul> <p>All aliases maintain the same string representation, extensions, and functionality as their verbose counterparts.</p>"},{"location":"usage/","title":"Usage Guide","text":"<p>This guide provides detailed examples of how to use the <code>mime-enum</code> library for various common tasks.</p>"},{"location":"usage/#basic-usage","title":"Basic Usage","text":""},{"location":"usage/#accessing-mime-types","title":"Accessing MIME Types","text":"<p>All MIME types are available as enum members:</p> <pre><code>from mime_enum import MimeType\n\n# Common MIME types\njson_type = MimeType.APPLICATION_JSON\nhtml_type = MimeType.TEXT_HTML\npdf_type = MimeType.APPLICATION_PDF\npng_type = MimeType.IMAGE_PNG\n\n# MIME types work as strings\nprint(json_type)  # \"application/json\"\nassert json_type == \"application/json\"  # True\n</code></pre>"},{"location":"usage/#file-extensions","title":"File Extensions","text":"<p>Each MIME type includes associated file extensions:</p> <pre><code># Single extension\njson_extensions = MimeType.APPLICATION_JSON.extensions\nprint(json_extensions)  # (\"json\",)\n\n# Multiple extensions\nhtml_extensions = MimeType.TEXT_HTML.extensions\nprint(html_extensions)  # (\"html\", \"htm\")\n\n# Check if a MIME type supports an extension\nif \"pdf\" in MimeType.APPLICATION_PDF.extensions:\n    print(\"PDF files use application/pdf MIME type\")\n</code></pre>"},{"location":"usage/#parsing-mime-type-strings","title":"Parsing MIME Type Strings","text":""},{"location":"usage/#strict-parsing-with-parse","title":"Strict Parsing with <code>parse()</code>","text":"<p>Use <code>parse()</code> when you need to ensure the MIME type is valid:</p> <pre><code>from mime_enum import parse\n\n# Basic parsing\nmime_type = parse(\"application/json\")\nprint(mime_type)  # MimeType.APPLICATION_JSON\n\n# Automatically strips parameters\nmime_type = parse(\"text/html; charset=utf-8\")\nprint(mime_type)  # MimeType.TEXT_HTML\n\n# Case insensitive\nmime_type = parse(\"IMAGE/PNG\")\nprint(mime_type)  # MimeType.IMAGE_PNG\n\n# Handles extra whitespace\nmime_type = parse(\"  application/pdf  \")\nprint(mime_type)  # MimeType.APPLICATION_PDF\n</code></pre>"},{"location":"usage/#alias-normalization","title":"Alias Normalization","text":"<p>The library automatically normalizes common MIME type aliases:</p> <pre><code># These aliases are normalized to their canonical forms\ncanonical = parse(\"text/json\")  # \u2192 MimeType.APPLICATION_JSON\ncanonical = parse(\"application/javascript\")  # \u2192 MimeType.TEXT_JAVASCRIPT\ncanonical = parse(\"image/jpg\")  # \u2192 MimeType.IMAGE_JPEG\n</code></pre>"},{"location":"usage/#error-handling-with-parse","title":"Error Handling with <code>parse()</code>","text":"<pre><code>try:\n    unknown = parse(\"application/unknown\")\nexcept ValueError as e:\n    print(f\"Unknown MIME type: {e}\")\n    # Output: Unknown MIME type: Unknown MIME type: 'application/unknown'\n\ntry:\n    empty = parse(\"\")\nexcept ValueError as e:\n    print(f\"Empty input: {e}\")\n    # Output: Empty input: Empty MIME string\n</code></pre>"},{"location":"usage/#safe-parsing-with-try_parse","title":"Safe Parsing with <code>try_parse()</code>","text":"<p>Use <code>try_parse()</code> when you want to handle unknown types gracefully:</p> <pre><code>from mime_enum import try_parse\n\n# Returns None for unknown types instead of raising\nresult = try_parse(\"application/unknown\")\nprint(result)  # None\n\n# Returns None for empty strings\nresult = try_parse(\"\")\nprint(result)  # None\n\n# Works the same as parse() for valid types\nresult = try_parse(\"application/json\")\nprint(result)  # MimeType.APPLICATION_JSON\n\n# Useful in conditional logic\nmime_type = try_parse(user_input)\nif mime_type:\n    print(f\"Valid MIME type: {mime_type}\")\nelse:\n    print(\"Unknown or invalid MIME type\")\n</code></pre>"},{"location":"usage/#file-extension-lookups","title":"File Extension Lookups","text":"<p>Important: The functions in this section only look at file extensions and do NOT examine actual file content. Files can have incorrect extensions, making this approach unreliable for security-critical applications. For content-based MIME type detection, use libraries like <code>python-magic</code> or <code>filetype</code>.</p>"},{"location":"usage/#basic-extension-lookup","title":"Basic Extension Lookup","text":"<pre><code>from mime_enum import from_extension\n\n# With or without leading dot\npdf_mime = from_extension(\"pdf\")\nprint(pdf_mime)  # MimeType.APPLICATION_PDF\n\npdf_mime = from_extension(\".pdf\")\nprint(pdf_mime)  # MimeType.APPLICATION_PDF\n\n# Case insensitive\njson_mime = from_extension(\"JSON\")\nprint(json_mime)  # MimeType.APPLICATION_JSON\n\n# Returns None for unknown extensions\nunknown = from_extension(\"unknown\")\nprint(unknown)  # None\n</code></pre>"},{"location":"usage/#common-extensions","title":"Common Extensions","text":"<pre><code># Web file types\nhtml_mime = from_extension(\"html\")  # MimeType.TEXT_HTML\ncss_mime = from_extension(\"css\")    # MimeType.TEXT_CSS\njs_mime = from_extension(\"js\")      # MimeType.TEXT_JAVASCRIPT\n\n# Document types\npdf_mime = from_extension(\"pdf\")    # MimeType.APPLICATION_PDF\ndoc_mime = from_extension(\"doc\")    # MimeType.APPLICATION_MSWORD\ndocx_mime = from_extension(\"docx\")  # MimeType.APPLICATION_DOCX\nxlsx_mime = from_extension(\"xlsx\")  # MimeType.APPLICATION_XLSX\npptx_mime = from_extension(\"pptx\")  # MimeType.APPLICATION_PPTX\ntxt_mime = from_extension(\"txt\")    # MimeType.TEXT_PLAIN\n\n# Image types\npng_mime = from_extension(\"png\")    # MimeType.IMAGE_PNG\njpg_mime = from_extension(\"jpg\")    # MimeType.IMAGE_JPEG\ngif_mime = from_extension(\"gif\")    # MimeType.IMAGE_GIF\n\n# Archive types\nzip_mime = from_extension(\"zip\")    # MimeType.APPLICATION_ZIP\ntar_mime = from_extension(\"tar\")    # MimeType.APPLICATION_X_TAR\ngz_mime = from_extension(\"gz\")      # MimeType.APPLICATION_X_GZIP\n</code></pre>"},{"location":"usage/#file-path-analysis","title":"File Path Analysis","text":"<p>Note: Path-based detection only uses file extensions and never reads file content. See the disclaimer above for limitations and alternatives.</p>"},{"location":"usage/#basic-path-lookup","title":"Basic Path Lookup","text":"<pre><code>from mime_enum import from_path\nfrom pathlib import Path\n\n# Works with string paths\nmime_type = from_path(\"/home/user/document.pdf\")\nprint(mime_type)  # MimeType.APPLICATION_PDF\n\n# Works with Path objects\npath = Path(\"data/config.json\")\nmime_type = from_path(path)\nprint(mime_type)  # MimeType.APPLICATION_JSON\n\n# Works with relative paths\nmime_type = from_path(\"../images/photo.png\")\nprint(mime_type)  # MimeType.IMAGE_PNG\n\n# Cross-platform paths\nmime_type = from_path(\"C:\\\\Users\\\\Name\\\\file.html\")  # Windows\nprint(mime_type)  # MimeType.TEXT_HTML\n</code></pre>"},{"location":"usage/#handling-files-without-extensions","title":"Handling Files Without Extensions","text":"<pre><code># Returns None for files without extensions\nno_extension = from_path(\"/path/to/README\")\nprint(no_extension)  # None\n\n# Returns None for empty paths\nempty_path = from_path(\"\")\nprint(empty_path)  # None\n</code></pre>"},{"location":"usage/#complex-file-extensions","title":"Complex File Extensions","text":"<p>The library currently uses the last extension for compound extensions:</p> <pre><code># For compound extensions, uses the last one\ntar_gz = from_path(\"archive.tar.gz\")\nprint(tar_gz)  # MimeType.APPLICATION_X_GZIP (from .gz)\n\n# If you need more sophisticated handling, extract manually\nfrom pathlib import Path\npath = Path(\"document.tar.gz\")\nif path.name.endswith('.tar.gz'):\n    # Handle as tar.gz specifically\n    mime_type = MimeType.APPLICATION_X_TAR  # or your preferred handling\n</code></pre>"},{"location":"usage/#convenient-aliases","title":"Convenient Aliases","text":""},{"location":"usage/#overview","title":"Overview","text":"<p>For MIME types with particularly verbose names, the library provides convenient aliases that point to the exact same enum instances. These aliases improve code readability and reduce typing while maintaining full type safety.</p>"},{"location":"usage/#available-aliases","title":"Available Aliases","text":"<p>The library currently provides aliases for Microsoft Office Open XML formats:</p> <pre><code>from mime_enum import MimeType\n\n# Word Processing\nMimeType.APPLICATION_DOCX    # Word document\nMimeType.APPLICATION_DOTX    # Word template\n\n# Spreadsheets\nMimeType.APPLICATION_XLSX    # Excel spreadsheet\nMimeType.APPLICATION_XLTX    # Excel template\n\n# Presentations\nMimeType.APPLICATION_PPTX    # PowerPoint presentation\nMimeType.APPLICATION_POTX    # PowerPoint template\nMimeType.APPLICATION_PPSX    # PowerPoint slideshow\nMimeType.APPLICATION_SLDX    # PowerPoint slide\n</code></pre>"},{"location":"usage/#using-aliases","title":"Using Aliases","text":"<p>Aliases work identically to their verbose counterparts:</p> <pre><code># These are the exact same objects\ndocx_alias = MimeType.APPLICATION_DOCX\ndocx_full = MimeType.APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT\nassert docx_alias is docx_full  # True\n\n# String representation is identical\nprint(docx_alias)  # \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\nprint(docx_full)   # \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n\n# Extensions are the same\nprint(docx_alias.extensions)  # (\"docx\",)\nprint(docx_full.extensions)   # (\"docx\",)\n</code></pre>"},{"location":"usage/#aliases-in-parsing-and-lookups","title":"Aliases in Parsing and Lookups","text":"<p>Aliases work seamlessly with all library functions:</p> <pre><code>from mime_enum import parse, from_extension, from_path\n\n# Extension lookup returns the alias instance\ndocx_mime = from_extension(\"docx\")\nprint(docx_mime is MimeType.APPLICATION_DOCX)  # True\n\n# Path lookup also returns the alias\ndocx_path = from_path(\"/documents/report.docx\")\nprint(docx_path is MimeType.APPLICATION_DOCX)  # True\n\n# Parsing the full MIME string returns the alias\nparsed = parse(\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")\nprint(parsed is MimeType.APPLICATION_DOCX)  # True\n</code></pre>"},{"location":"usage/#benefits-of-aliases","title":"Benefits of Aliases","text":"<ol> <li> <p>Improved Readability: <code>APPLICATION_DOCX</code> is much easier to read than <code>APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT</code></p> </li> <li> <p>Less Typing: Significantly shorter to type and autocomplete</p> </li> <li> <p>Same Functionality: All aliases point to the exact same enum instances, so they work identically in every context</p> </li> <li> <p>IDE Support: Full autocompletion and type checking support</p> </li> </ol>"},{"location":"usage/#example-working-with-office-documents","title":"Example: Working with Office Documents","text":"<pre><code>from mime_enum import MimeType, from_extension\n\ndef process_office_document(file_path: str):\n    mime_type = from_extension(file_path)\n\n    if mime_type is MimeType.APPLICATION_DOCX:\n        return \"Processing Word document\"\n    elif mime_type is MimeType.APPLICATION_XLSX:\n        return \"Processing Excel spreadsheet\"\n    elif mime_type is MimeType.APPLICATION_PPTX:\n        return \"Processing PowerPoint presentation\"\n    else:\n        return \"Unknown office document type\"\n\n# Usage\nresult = process_office_document(\"report.docx\")\nprint(result)  # \"Processing Word document\"\n</code></pre>"}]}